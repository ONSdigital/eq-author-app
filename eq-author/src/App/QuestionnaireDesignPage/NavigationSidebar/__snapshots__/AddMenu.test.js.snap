// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddMenu should render 1`] = `
<div
  onAdd={[MockFunction]}
>
  <Popout
    container={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "AddMenu__PopoutContainer-bv63ic-5",
          "isStatic": false,
          "rules": Array [
            "position:relative;display:inline-block;",
            "width:100%;",
          ],
        },
        "displayName": "AddMenu__PopoutContainer",
        "foldedComponentIds": Array [
          "Popout__Container-sc-1vqdjha-0",
        ],
        "render": [Function],
        "styledComponentId": "AddMenu__PopoutContainer-bv63ic-5",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    horizontalAlignment="left"
    layer={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "_foldedDefaultProps": Object {
          "horizontalAlignment": "left",
          "offsetX": "0",
          "offsetY": "0",
          "verticalAlignment": "bottom",
        },
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "AddMenu__PopoutLayer-bv63ic-6",
          "isStatic": false,
          "rules": Array [
            "position:absolute;",
            [Function],
            ";",
            [Function],
            ";z-index:10;",
            "left:auto;top:auto;width:100%;",
          ],
        },
        "displayName": "AddMenu__PopoutLayer",
        "foldedComponentIds": Array [
          "Popout__Layer-sc-1vqdjha-1",
        ],
        "propTypes": Object {
          "horizontalAlignment": [Function],
          "offsetX": [Function],
          "offsetY": [Function],
          "verticalAlignment": [Function],
        },
        "render": [Function],
        "styledComponentId": "AddMenu__PopoutLayer-bv63ic-6",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    onToggleOpen={[MockFunction]}
    open={false}
    transition={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "_foldedDefaultProps": Object {
          "in": false,
          "timeout": 200,
        },
        "attrs": Array [
          Object {
            "classNames": "popup",
          },
        ],
        "componentStyle": ComponentStyle {
          "componentId": "PopupTransition-sc-1jce989-0",
          "isStatic": false,
          "rules": Array [
            "opacity:1;transform:translate(0,0%);transition:all 0.6s -0.1s;transform-origin:top center;&.popup-enter{transform:translate(0,-100%);transition:all 0.6s 0s;transform-origin:top center;}&.popup-exit{opacity:0.9;transform:translate(0,-130%);transition:all 0.6s 0s;transform-origin:top center;}",
          ],
        },
        "displayName": "PopupTransition",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "children": [Function],
          "timeout": [Function],
        },
        "render": [Function],
        "styledComponentId": "PopupTransition-sc-1jce989-0",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    trigger={
      <AddMenu__AddButton
        data-test="btn-add"
        type="button"
        variant="primary"
      >
        <AddMenu__StyledIconTextAdd
          icon={[Function]}
        >
          Add content
        </AddMenu__StyledIconTextAdd>
      </AddMenu__AddButton>
    }
    verticalAlignment="top"
  >
    <AddMenu__AddMenuWindow
      data-test="addmenu-window"
    >
      <AddMenu__AddMenuButton
        data-test="btn-add-question-page"
        disabled={false}
        onClick={[MockFunction]}
        primary={true}
        type="button"
        variant="primary"
      >
        <AddMenu__StyledIconText
          icon={[Function]}
        >
          Question
        </AddMenu__StyledIconText>
      </AddMenu__AddMenuButton>
      <AddMenu__AddMenuButton
        data-test="btn-add-section"
        onClick={[MockFunction]}
        primary={true}
        type="button"
        variant="primary"
      >
        <AddMenu__StyledIconText
          icon={[Function]}
        >
          Section
        </AddMenu__StyledIconText>
      </AddMenu__AddMenuButton>
      <AddMenu__AddMenuButton
        data-test="btn-add-question-confirmation"
        disabled={false}
        onClick={[MockFunction]}
        primary={true}
        type="button"
        variant="primary"
      >
        <AddMenu__StyledIconText
          icon={[Function]}
        >
          Confirmation question
        </AddMenu__StyledIconText>
      </AddMenu__AddMenuButton>
      <AddMenu__AddMenuButton
        data-test="btn-add-calculated-summary"
        disabled={false}
        onClick={[MockFunction]}
        primary={true}
        type="button"
        variant="primary"
      >
        <AddMenu__StyledIconText
          icon={[Function]}
        >
          Calculated summary
        </AddMenu__StyledIconText>
      </AddMenu__AddMenuButton>
    </AddMenu__AddMenuWindow>
  </Popout>
</div>
`;
