// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CalculatedSummaryPageEditor should display the correct error message when piping answer in title is deleted 1`] = `
<div
  data-test="calculated-summary-page-editor"
>
  <Apollo(withShowToast(Apollo(Apollo(Component))))
    alertText="All changes to this page will be lost."
    fetchAnswers={[MockFunction]}
    isDuplicateDisabled={true}
    isMoveDisabled={true}
    match={
      Object {
        "params": Object {
          "pageId": "3",
          "questionnaireId": "1",
          "sectionId": "2",
        },
      }
    }
    onChange={[MockFunction]}
    onChangeUpdate={[MockFunction]}
    onUpdate={[MockFunction]}
    onUpdateCalculatedSummaryPage={[MockFunction]}
    page={
      Object {
        "alias": "",
        "availableSummaryAnswers": Array [],
        "displayName": "Foo",
        "id": "3",
        "pageType": "CalculatedSummaryPage",
        "position": 1,
        "section": Object {
          "displayName": "This Section",
          "id": "2",
          "questionnaire": Object {
            "id": "1",
            "metadata": Array [],
          },
        },
        "summaryAnswers": Array [],
        "title": "",
        "totalTitle": "",
        "validationErrorInfo": Object {
          "errors": Array [
            Object {
              "errorCode": "PIPING_TITLE_DELETED",
              "field": "title",
              "id": "1",
              "type": "pages",
            },
          ],
        },
      }
    }
    questionnaireId="1"
  />
  <CalculatedSummaryPageEditor__PageSegment>
    <RichTextEditor
      allowableTypes={
        Array [
          "Custom",
          "Metadata",
          "Variables",
        ]
      }
      autoFocus={true}
      controls={
        Object {
          "emphasis": true,
          "piping": true,
        }
      }
      defaultTab="variables"
      disabled={false}
      errorValidationMsg="The answer being piped has been deleted"
      fetchAnswers={[MockFunction]}
      id="summary-title"
      label="Calculated summary title"
      maxHeight={12}
      metadata={Array []}
      multiline={false}
      name="title"
      onUpdate={[MockFunction]}
      placeholder=""
      size="large"
      testSelector="txt-summary-title"
      value=""
    />
    <div>
      <CalculatedSummaryPageEditor__SelectorTitle>
        Answers to calculate
      </CalculatedSummaryPageEditor__SelectorTitle>
      <withValidationError(UnwrappedAnswerSelector)
        enableValidationMessage={true}
        onUpdateCalculatedSummaryPage={[MockFunction]}
        page={
          Object {
            "alias": "",
            "availableSummaryAnswers": Array [],
            "displayName": "Foo",
            "id": "3",
            "pageType": "CalculatedSummaryPage",
            "position": 1,
            "section": Object {
              "displayName": "This Section",
              "id": "2",
              "questionnaire": Object {
                "id": "1",
                "metadata": Array [],
              },
            },
            "summaryAnswers": Array [],
            "title": "",
            "totalTitle": "",
            "validationErrorInfo": Object {
              "errors": Array [
                Object {
                  "errorCode": "PIPING_TITLE_DELETED",
                  "field": "title",
                  "id": "1",
                  "type": "pages",
                },
              ],
            },
          }
        }
      />
    </div>
    <RichTextEditor
      autoFocus={false}
      controls={
        Object {
          "emphasis": true,
          "piping": true,
        }
      }
      disabled={false}
      fetchAnswers={[MockFunction]}
      id="total-title"
      label="Total title"
      maxHeight={12}
      metadata={Array []}
      multiline={false}
      name="totalTitle"
      onUpdate={[MockFunction]}
      placeholder=""
      size="large"
      testSelector="txt-total-title"
      value=""
    />
  </CalculatedSummaryPageEditor__PageSegment>
</div>
`;

exports[`CalculatedSummaryPageEditor should display the correct error message when piping answer in title is moved after This question 1`] = `
<div
  data-test="calculated-summary-page-editor"
>
  <Apollo(withShowToast(Apollo(Apollo(Component))))
    alertText="All changes to this page will be lost."
    fetchAnswers={[MockFunction]}
    isDuplicateDisabled={true}
    isMoveDisabled={true}
    match={
      Object {
        "params": Object {
          "pageId": "3",
          "questionnaireId": "1",
          "sectionId": "2",
        },
      }
    }
    onChange={[MockFunction]}
    onChangeUpdate={[MockFunction]}
    onUpdate={[MockFunction]}
    onUpdateCalculatedSummaryPage={[MockFunction]}
    page={
      Object {
        "alias": "",
        "availableSummaryAnswers": Array [],
        "displayName": "Foo",
        "id": "3",
        "pageType": "CalculatedSummaryPage",
        "position": 1,
        "section": Object {
          "displayName": "This Section",
          "id": "2",
          "questionnaire": Object {
            "id": "1",
            "metadata": Array [],
          },
        },
        "summaryAnswers": Array [],
        "title": "",
        "totalTitle": "",
        "validationErrorInfo": Object {
          "errors": Array [
            Object {
              "errorCode": "PIPING_TITLE_MOVED",
              "field": "title",
              "id": "1",
              "type": "pages",
            },
          ],
        },
      }
    }
    questionnaireId="1"
  />
  <CalculatedSummaryPageEditor__PageSegment>
    <RichTextEditor
      allowableTypes={
        Array [
          "Custom",
          "Metadata",
          "Variables",
        ]
      }
      autoFocus={true}
      controls={
        Object {
          "emphasis": true,
          "piping": true,
        }
      }
      defaultTab="variables"
      disabled={false}
      errorValidationMsg="The answer being piped is now later in the questionnaire"
      fetchAnswers={[MockFunction]}
      id="summary-title"
      label="Calculated summary title"
      maxHeight={12}
      metadata={Array []}
      multiline={false}
      name="title"
      onUpdate={[MockFunction]}
      placeholder=""
      size="large"
      testSelector="txt-summary-title"
      value=""
    />
    <div>
      <CalculatedSummaryPageEditor__SelectorTitle>
        Answers to calculate
      </CalculatedSummaryPageEditor__SelectorTitle>
      <withValidationError(UnwrappedAnswerSelector)
        enableValidationMessage={true}
        onUpdateCalculatedSummaryPage={[MockFunction]}
        page={
          Object {
            "alias": "",
            "availableSummaryAnswers": Array [],
            "displayName": "Foo",
            "id": "3",
            "pageType": "CalculatedSummaryPage",
            "position": 1,
            "section": Object {
              "displayName": "This Section",
              "id": "2",
              "questionnaire": Object {
                "id": "1",
                "metadata": Array [],
              },
            },
            "summaryAnswers": Array [],
            "title": "",
            "totalTitle": "",
            "validationErrorInfo": Object {
              "errors": Array [
                Object {
                  "errorCode": "PIPING_TITLE_MOVED",
                  "field": "title",
                  "id": "1",
                  "type": "pages",
                },
              ],
            },
          }
        }
      />
    </div>
    <RichTextEditor
      autoFocus={false}
      controls={
        Object {
          "emphasis": true,
          "piping": true,
        }
      }
      disabled={false}
      fetchAnswers={[MockFunction]}
      id="total-title"
      label="Total title"
      maxHeight={12}
      metadata={Array []}
      multiline={false}
      name="totalTitle"
      onUpdate={[MockFunction]}
      placeholder=""
      size="large"
      testSelector="txt-total-title"
      value=""
    />
  </CalculatedSummaryPageEditor__PageSegment>
</div>
`;

exports[`CalculatedSummaryPageEditor should display the correct error message when the title is missing 1`] = `
<div
  data-test="calculated-summary-page-editor"
>
  <Apollo(withShowToast(Apollo(Apollo(Component))))
    alertText="All changes to this page will be lost."
    fetchAnswers={[MockFunction]}
    isDuplicateDisabled={true}
    isMoveDisabled={true}
    match={
      Object {
        "params": Object {
          "pageId": "3",
          "questionnaireId": "1",
          "sectionId": "2",
        },
      }
    }
    onChange={[MockFunction]}
    onChangeUpdate={[MockFunction]}
    onUpdate={[MockFunction]}
    onUpdateCalculatedSummaryPage={[MockFunction]}
    page={
      Object {
        "alias": "",
        "availableSummaryAnswers": Array [],
        "displayName": "Foo",
        "id": "3",
        "pageType": "CalculatedSummaryPage",
        "position": 1,
        "section": Object {
          "displayName": "This Section",
          "id": "2",
          "questionnaire": Object {
            "id": "1",
            "metadata": Array [],
          },
        },
        "summaryAnswers": Array [],
        "title": "",
        "totalTitle": "",
        "validationErrorInfo": Object {
          "errors": Array [
            Object {
              "errorCode": "ERR_VALID_REQUIRED",
              "field": "title",
              "id": "1",
              "type": "pages",
            },
          ],
        },
      }
    }
    questionnaireId="1"
  />
  <CalculatedSummaryPageEditor__PageSegment>
    <RichTextEditor
      allowableTypes={
        Array [
          "Custom",
          "Metadata",
          "Variables",
        ]
      }
      autoFocus={true}
      controls={
        Object {
          "emphasis": true,
          "piping": true,
        }
      }
      defaultTab="variables"
      disabled={false}
      errorValidationMsg="Enter a calculated summary title"
      fetchAnswers={[MockFunction]}
      id="summary-title"
      label="Calculated summary title"
      maxHeight={12}
      metadata={Array []}
      multiline={false}
      name="title"
      onUpdate={[MockFunction]}
      placeholder=""
      size="large"
      testSelector="txt-summary-title"
      value=""
    />
    <div>
      <CalculatedSummaryPageEditor__SelectorTitle>
        Answers to calculate
      </CalculatedSummaryPageEditor__SelectorTitle>
      <withValidationError(UnwrappedAnswerSelector)
        enableValidationMessage={true}
        onUpdateCalculatedSummaryPage={[MockFunction]}
        page={
          Object {
            "alias": "",
            "availableSummaryAnswers": Array [],
            "displayName": "Foo",
            "id": "3",
            "pageType": "CalculatedSummaryPage",
            "position": 1,
            "section": Object {
              "displayName": "This Section",
              "id": "2",
              "questionnaire": Object {
                "id": "1",
                "metadata": Array [],
              },
            },
            "summaryAnswers": Array [],
            "title": "",
            "totalTitle": "",
            "validationErrorInfo": Object {
              "errors": Array [
                Object {
                  "errorCode": "ERR_VALID_REQUIRED",
                  "field": "title",
                  "id": "1",
                  "type": "pages",
                },
              ],
            },
          }
        }
      />
    </div>
    <RichTextEditor
      autoFocus={false}
      controls={
        Object {
          "emphasis": true,
          "piping": true,
        }
      }
      disabled={false}
      fetchAnswers={[MockFunction]}
      id="total-title"
      label="Total title"
      maxHeight={12}
      metadata={Array []}
      multiline={false}
      name="totalTitle"
      onUpdate={[MockFunction]}
      placeholder=""
      size="large"
      testSelector="txt-total-title"
      value=""
    />
  </CalculatedSummaryPageEditor__PageSegment>
</div>
`;

exports[`CalculatedSummaryPageEditor should render 1`] = `
<div
  data-test="calculated-summary-page-editor"
>
  <Apollo(withShowToast(Apollo(Apollo(Component))))
    alertText="All changes to this page will be lost."
    fetchAnswers={[MockFunction]}
    isDuplicateDisabled={true}
    isMoveDisabled={true}
    match={
      Object {
        "params": Object {
          "pageId": "3",
          "questionnaireId": "1",
          "sectionId": "2",
        },
      }
    }
    onChange={[MockFunction]}
    onChangeUpdate={[MockFunction]}
    onUpdate={[MockFunction]}
    onUpdateCalculatedSummaryPage={[MockFunction]}
    page={
      Object {
        "alias": "",
        "availableSummaryAnswers": Array [],
        "displayName": "Foo",
        "id": "3",
        "pageType": "CalculatedSummaryPage",
        "position": 1,
        "section": Object {
          "displayName": "This Section",
          "id": "2",
          "questionnaire": Object {
            "id": "1",
            "metadata": Array [],
          },
        },
        "summaryAnswers": Array [],
        "title": "",
        "totalTitle": "",
        "validationErrorInfo": Object {
          "errors": Array [],
        },
      }
    }
    questionnaireId="1"
  />
  <CalculatedSummaryPageEditor__PageSegment>
    <RichTextEditor
      allowableTypes={
        Array [
          "Custom",
          "Metadata",
          "Variables",
        ]
      }
      autoFocus={true}
      controls={
        Object {
          "emphasis": true,
          "piping": true,
        }
      }
      defaultTab="variables"
      disabled={false}
      fetchAnswers={[MockFunction]}
      id="summary-title"
      label="Calculated summary title"
      maxHeight={12}
      metadata={Array []}
      multiline={false}
      name="title"
      onUpdate={[MockFunction]}
      placeholder=""
      size="large"
      testSelector="txt-summary-title"
      value=""
    />
    <div>
      <CalculatedSummaryPageEditor__SelectorTitle>
        Answers to calculate
      </CalculatedSummaryPageEditor__SelectorTitle>
      <withValidationError(UnwrappedAnswerSelector)
        enableValidationMessage={true}
        onUpdateCalculatedSummaryPage={[MockFunction]}
        page={
          Object {
            "alias": "",
            "availableSummaryAnswers": Array [],
            "displayName": "Foo",
            "id": "3",
            "pageType": "CalculatedSummaryPage",
            "position": 1,
            "section": Object {
              "displayName": "This Section",
              "id": "2",
              "questionnaire": Object {
                "id": "1",
                "metadata": Array [],
              },
            },
            "summaryAnswers": Array [],
            "title": "",
            "totalTitle": "",
            "validationErrorInfo": Object {
              "errors": Array [],
            },
          }
        }
      />
    </div>
    <RichTextEditor
      autoFocus={false}
      controls={
        Object {
          "emphasis": true,
          "piping": true,
        }
      }
      disabled={false}
      fetchAnswers={[MockFunction]}
      id="total-title"
      label="Total title"
      maxHeight={12}
      metadata={Array []}
      multiline={false}
      name="totalTitle"
      onUpdate={[MockFunction]}
      placeholder=""
      size="large"
      testSelector="txt-total-title"
      value=""
    />
  </CalculatedSummaryPageEditor__PageSegment>
</div>
`;
