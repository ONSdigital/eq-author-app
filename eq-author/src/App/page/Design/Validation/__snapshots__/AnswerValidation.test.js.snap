// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AnswerValidation Numeric answer validation preview maxValue should not render when the custom value is null 1`] = `null`;

exports[`AnswerValidation Numeric answer validation preview maxValue should not render when the custom value is null 2`] = `null`;

exports[`AnswerValidation Numeric answer validation preview maxValue should not render when the custom value is null 3`] = `null`;

exports[`AnswerValidation Numeric answer validation preview maxValue should render custom values 1`] = `"5%"`;

exports[`AnswerValidation Numeric answer validation preview maxValue should render custom values 2`] = `5`;

exports[`AnswerValidation Numeric answer validation preview maxValue should render custom values 3`] = `"£5"`;

exports[`AnswerValidation Numeric answer validation preview maxValue should render previous answer 1`] = `"foobar"`;

exports[`AnswerValidation Numeric answer validation preview maxValue should render previous answer 2`] = `"foobar"`;

exports[`AnswerValidation Numeric answer validation preview maxValue should render previous answer 3`] = `"foobar"`;

exports[`AnswerValidation Numeric answer validation preview minValue should not render when the custom value is null 1`] = `null`;

exports[`AnswerValidation Numeric answer validation preview minValue should not render when the custom value is null 2`] = `null`;

exports[`AnswerValidation Numeric answer validation preview minValue should not render when the custom value is null 3`] = `null`;

exports[`AnswerValidation Numeric answer validation preview minValue should render custom values 1`] = `"5%"`;

exports[`AnswerValidation Numeric answer validation preview minValue should render custom values 2`] = `5`;

exports[`AnswerValidation Numeric answer validation preview minValue should render custom values 3`] = `"£5"`;

exports[`AnswerValidation Numeric answer validation preview minValue should render previous answer 1`] = `"foobar"`;

exports[`AnswerValidation Numeric answer validation preview minValue should render previous answer 2`] = `"foobar"`;

exports[`AnswerValidation Numeric answer validation preview minValue should render previous answer 3`] = `"foobar"`;

exports[`AnswerValidation should not render when there are no valid validation types 1`] = `""`;

exports[`AnswerValidation should render 1`] = `
<ContextProvider
  value={
    Object {
      "answer": Object {
        "id": "1",
        "type": "Number",
        "validation": Object {
          "maxValue": Object {
            "enabled": false,
          },
          "minValue": Object {
            "enabled": false,
          },
        },
      },
    }
  }
>
  <SidebarButton
    data-test="sidebar-button-min-value"
    key="minValue"
    onClick={[Function]}
  >
    <SidebarButton__Title>
      Min Value
    </SidebarButton__Title>
  </SidebarButton>
  <SidebarButton
    data-test="sidebar-button-max-value"
    key="maxValue"
    onClick={[Function]}
  >
    <SidebarButton__Title>
      Max Value
    </SidebarButton__Title>
  </SidebarButton>
  <Connect(UnconnectedModalWithNav)
    id="modal-validation-1"
    isOpen={false}
    navItems={
      Array [
        Object {
          "id": "minValue",
          "preview": [Function],
          "render": [Function],
          "title": "Min Value",
          "types": Array [
            "Currency",
            "Number",
            "Percentage",
          ],
        },
        Object {
          "id": "maxValue",
          "preview": [Function],
          "render": [Function],
          "title": "Max Value",
          "types": Array [
            "Currency",
            "Number",
            "Percentage",
          ],
        },
      ]
    }
    onClose={[Function]}
    title="Number validation"
  />
</ContextProvider>
`;

exports[`AnswerValidation validation object array should render the Earliest Date validation 1`] = `
<Component
  displayName="Earliest date"
  readKey="earliestDate"
  testId="earliest-date-validation"
>
  <Component />
</Component>
`;

exports[`AnswerValidation validation object array should render the Latest Date validation 1`] = `
<Component
  displayName="Latest date"
  readKey="latestDate"
  testId="latest-date-validation"
>
  <Component />
</Component>
`;

exports[`AnswerValidation validation object array should render the Max Duration validation 1`] = `
<Component
  displayName="Max duration"
  readKey="maxDuration"
  testId="max-duration-validation"
>
  <Component />
</Component>
`;

exports[`AnswerValidation validation object array should render the Max Value validation 1`] = `
<Component
  displayName="Max value"
  readKey="maxValue"
  testId="max-value-validation"
>
  <Component />
</Component>
`;

exports[`AnswerValidation validation object array should render the Min Duration validation 1`] = `
<Component
  displayName="Min duration"
  readKey="minDuration"
  testId="min-duration-validation"
>
  <Component />
</Component>
`;

exports[`AnswerValidation validation object array should render the Min Value validation 1`] = `
<Component
  displayName="Min value"
  readKey="minValue"
  testId="min-value-validation"
>
  <Component />
</Component>
`;
