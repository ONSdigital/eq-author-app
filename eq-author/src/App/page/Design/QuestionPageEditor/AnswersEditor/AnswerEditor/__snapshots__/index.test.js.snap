// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Answer Editor should correctly calculates date format 1`] = `
<Connect(withEntityEditor(UnwrappedDate))
  answer={
    Object {
      "description": "",
      "id": "1",
      "properties": Object {
        "format": "yyyy",
      },
      "title": "",
      "type": "Date",
    }
  }
  canMoveDown={true}
  canMoveUp={true}
  onAddExclusive={[MockFunction]}
  onAddOption={[MockFunction]}
  onChange={[MockFunction]}
  onDeleteAnswer={[MockFunction]}
  onDeleteOption={[MockFunction]}
  onMoveDown={[MockFunction]}
  onMoveUp={[MockFunction]}
  onUpdate={[MockFunction]}
  onUpdateOption={[MockFunction]}
  showDay={false}
  showMonth={false}
  showYear={true}
/>
`;

exports[`Answer Editor should correctly calculates date format 2`] = `
<Connect(withEntityEditor(UnwrappedDate))
  answer={
    Object {
      "description": "",
      "id": "1",
      "properties": Object {
        "format": "mm/yyyy",
      },
      "title": "",
      "type": "Date",
    }
  }
  canMoveDown={true}
  canMoveUp={true}
  onAddExclusive={[MockFunction]}
  onAddOption={[MockFunction]}
  onChange={[MockFunction]}
  onDeleteAnswer={[MockFunction]}
  onDeleteOption={[MockFunction]}
  onMoveDown={[MockFunction]}
  onMoveUp={[MockFunction]}
  onUpdate={[MockFunction]}
  onUpdateOption={[MockFunction]}
  showDay={false}
  showMonth={true}
  showYear={true}
/>
`;

exports[`Answer Editor should correctly calculates date format 3`] = `
<Connect(withEntityEditor(UnwrappedDate))
  answer={
    Object {
      "description": "",
      "id": "1",
      "properties": Object {
        "format": "dd/mm/yyyy",
      },
      "title": "",
      "type": "Date",
    }
  }
  canMoveDown={true}
  canMoveUp={true}
  onAddExclusive={[MockFunction]}
  onAddOption={[MockFunction]}
  onChange={[MockFunction]}
  onDeleteAnswer={[MockFunction]}
  onDeleteOption={[MockFunction]}
  onMoveDown={[MockFunction]}
  onMoveUp={[MockFunction]}
  onUpdate={[MockFunction]}
  onUpdateOption={[MockFunction]}
  showDay={true}
  showMonth={true}
  showYear={true}
/>
`;

exports[`Answer Editor should render Checkbox 1`] = `
<AnswerEditor__Answer
  data-test="answer-editor"
>
  <AnswerEditor__AnswerHeader>
    <AnswerEditor__AnswerType
      data-test="answer-type"
    >
      Checkbox
    </AnswerEditor__AnswerType>
    <AnswerEditor__Buttons>
      <Tooltip
        content="Move answer up"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-up"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Move answer down"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-down"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Delete answer"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <DeleteButton
          aria-label="Delete answer"
          data-test="btn-delete-answer"
          onClick={[Function]}
          size="medium"
          type="button"
        />
      </Tooltip>
    </AnswerEditor__Buttons>
  </AnswerEditor__AnswerHeader>
  <AnswerEditor__Padding>
    <MultipleChoiceAnswer
      answer={
        Object {
          "description": "",
          "id": "1",
          "options": Array [
            Object {
              "description": "",
              "id": "1",
              "label": "",
            },
          ],
          "title": "",
          "type": "Checkbox",
        }
      }
      canMoveDown={true}
      canMoveUp={true}
      minOptions={1}
      onAddExclusive={[MockFunction]}
      onAddOption={[MockFunction]}
      onChange={[MockFunction]}
      onDeleteAnswer={[MockFunction]}
      onDeleteOption={[MockFunction]}
      onMoveDown={[MockFunction]}
      onMoveUp={[MockFunction]}
      onUpdate={[MockFunction]}
      onUpdateOption={[MockFunction]}
      type="Checkbox"
    />
  </AnswerEditor__Padding>
</AnswerEditor__Answer>
`;

exports[`Answer Editor should render Currency 1`] = `
<AnswerEditor__Answer
  data-test="answer-editor"
>
  <AnswerEditor__AnswerHeader>
    <AnswerEditor__AnswerType
      data-test="answer-type"
    >
      Currency
    </AnswerEditor__AnswerType>
    <AnswerEditor__Buttons>
      <Tooltip
        content="Move answer up"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-up"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Move answer down"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-down"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Delete answer"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <DeleteButton
          aria-label="Delete answer"
          data-test="btn-delete-answer"
          onClick={[Function]}
          size="medium"
          type="button"
        />
      </Tooltip>
    </AnswerEditor__Buttons>
  </AnswerEditor__AnswerHeader>
  <AnswerEditor__Padding>
    <withValidationError(Connect(withEntityEditor(StatelessBasicAnswer)))
      answer={
        Object {
          "description": "",
          "id": "1",
          "title": "",
          "type": "Currency",
        }
      }
      canMoveDown={true}
      canMoveUp={true}
      enableValidationMessage={true}
      onAddExclusive={[MockFunction]}
      onAddOption={[MockFunction]}
      onChange={[MockFunction]}
      onDeleteAnswer={[MockFunction]}
      onDeleteOption={[MockFunction]}
      onMoveDown={[MockFunction]}
      onMoveUp={[MockFunction]}
      onUpdate={[MockFunction]}
      onUpdateOption={[MockFunction]}
      showDescription={true}
    />
  </AnswerEditor__Padding>
</AnswerEditor__Answer>
`;

exports[`Answer Editor should render Date 1`] = `
<AnswerEditor__Answer
  data-test="answer-editor"
>
  <AnswerEditor__AnswerHeader>
    <AnswerEditor__AnswerType
      data-test="answer-type"
    >
      Date
    </AnswerEditor__AnswerType>
    <AnswerEditor__Buttons>
      <Tooltip
        content="Move answer up"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-up"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Move answer down"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-down"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Delete answer"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <DeleteButton
          aria-label="Delete answer"
          data-test="btn-delete-answer"
          onClick={[Function]}
          size="medium"
          type="button"
        />
      </Tooltip>
    </AnswerEditor__Buttons>
  </AnswerEditor__AnswerHeader>
  <AnswerEditor__Padding>
    <Connect(withEntityEditor(UnwrappedDate))
      answer={
        Object {
          "description": "",
          "id": "1",
          "title": "",
          "type": "Date",
        }
      }
      canMoveDown={true}
      canMoveUp={true}
      onAddExclusive={[MockFunction]}
      onAddOption={[MockFunction]}
      onChange={[MockFunction]}
      onDeleteAnswer={[MockFunction]}
      onDeleteOption={[MockFunction]}
      onMoveDown={[MockFunction]}
      onMoveUp={[MockFunction]}
      onUpdate={[MockFunction]}
      onUpdateOption={[MockFunction]}
      showDay={false}
      showMonth={false}
      showYear={false}
    />
  </AnswerEditor__Padding>
</AnswerEditor__Answer>
`;

exports[`Answer Editor should render DateRange 1`] = `
<AnswerEditor__Answer
  data-test="answer-editor"
>
  <AnswerEditor__AnswerHeader>
    <AnswerEditor__AnswerType
      data-test="answer-type"
    >
      DateRange
    </AnswerEditor__AnswerType>
    <AnswerEditor__Buttons>
      <Tooltip
        content="Move answer up"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-up"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Move answer down"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-down"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Delete answer"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <DeleteButton
          aria-label="Delete answer"
          data-test="btn-delete-answer"
          onClick={[Function]}
          size="medium"
          type="button"
        />
      </Tooltip>
    </AnswerEditor__Buttons>
  </AnswerEditor__AnswerHeader>
  <AnswerEditor__Padding>
    <DateRange
      answer={
        Object {
          "description": "",
          "id": "1",
          "title": "",
          "type": "DateRange",
        }
      }
      canMoveDown={true}
      canMoveUp={true}
      onAddExclusive={[MockFunction]}
      onAddOption={[MockFunction]}
      onChange={[MockFunction]}
      onDeleteAnswer={[MockFunction]}
      onDeleteOption={[MockFunction]}
      onMoveDown={[MockFunction]}
      onMoveUp={[MockFunction]}
      onUpdate={[MockFunction]}
      onUpdateOption={[MockFunction]}
    />
  </AnswerEditor__Padding>
</AnswerEditor__Answer>
`;

exports[`Answer Editor should render Number 1`] = `
<AnswerEditor__Answer
  data-test="answer-editor"
>
  <AnswerEditor__AnswerHeader>
    <AnswerEditor__AnswerType
      data-test="answer-type"
    >
      Number
    </AnswerEditor__AnswerType>
    <AnswerEditor__Buttons>
      <Tooltip
        content="Move answer up"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-up"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Move answer down"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-down"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Delete answer"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <DeleteButton
          aria-label="Delete answer"
          data-test="btn-delete-answer"
          onClick={[Function]}
          size="medium"
          type="button"
        />
      </Tooltip>
    </AnswerEditor__Buttons>
  </AnswerEditor__AnswerHeader>
  <AnswerEditor__Padding>
    <withValidationError(Connect(withEntityEditor(StatelessBasicAnswer)))
      answer={
        Object {
          "description": "",
          "id": "1",
          "title": "",
          "type": "Number",
        }
      }
      canMoveDown={true}
      canMoveUp={true}
      enableValidationMessage={true}
      onAddExclusive={[MockFunction]}
      onAddOption={[MockFunction]}
      onChange={[MockFunction]}
      onDeleteAnswer={[MockFunction]}
      onDeleteOption={[MockFunction]}
      onMoveDown={[MockFunction]}
      onMoveUp={[MockFunction]}
      onUpdate={[MockFunction]}
      onUpdateOption={[MockFunction]}
      showDescription={true}
    />
  </AnswerEditor__Padding>
</AnswerEditor__Answer>
`;

exports[`Answer Editor should render Percentage 1`] = `
<AnswerEditor__Answer
  data-test="answer-editor"
>
  <AnswerEditor__AnswerHeader>
    <AnswerEditor__AnswerType
      data-test="answer-type"
    >
      Percentage
    </AnswerEditor__AnswerType>
    <AnswerEditor__Buttons>
      <Tooltip
        content="Move answer up"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-up"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Move answer down"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-down"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Delete answer"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <DeleteButton
          aria-label="Delete answer"
          data-test="btn-delete-answer"
          onClick={[Function]}
          size="medium"
          type="button"
        />
      </Tooltip>
    </AnswerEditor__Buttons>
  </AnswerEditor__AnswerHeader>
  <AnswerEditor__Padding>
    <withValidationError(Connect(withEntityEditor(StatelessBasicAnswer)))
      answer={
        Object {
          "description": "",
          "id": "1",
          "title": "",
          "type": "Percentage",
        }
      }
      canMoveDown={true}
      canMoveUp={true}
      enableValidationMessage={true}
      onAddExclusive={[MockFunction]}
      onAddOption={[MockFunction]}
      onChange={[MockFunction]}
      onDeleteAnswer={[MockFunction]}
      onDeleteOption={[MockFunction]}
      onMoveDown={[MockFunction]}
      onMoveUp={[MockFunction]}
      onUpdate={[MockFunction]}
      onUpdateOption={[MockFunction]}
      showDescription={true}
    />
  </AnswerEditor__Padding>
</AnswerEditor__Answer>
`;

exports[`Answer Editor should render Radio 1`] = `
<AnswerEditor__Answer
  data-test="answer-editor"
>
  <AnswerEditor__AnswerHeader>
    <AnswerEditor__AnswerType
      data-test="answer-type"
    >
      Radio
    </AnswerEditor__AnswerType>
    <AnswerEditor__Buttons>
      <Tooltip
        content="Move answer up"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-up"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Move answer down"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-down"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Delete answer"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <DeleteButton
          aria-label="Delete answer"
          data-test="btn-delete-answer"
          onClick={[Function]}
          size="medium"
          type="button"
        />
      </Tooltip>
    </AnswerEditor__Buttons>
  </AnswerEditor__AnswerHeader>
  <AnswerEditor__Padding>
    <MultipleChoiceAnswer
      answer={
        Object {
          "description": "",
          "id": "1",
          "options": Array [
            Object {
              "description": "",
              "id": "1",
              "label": "",
            },
          ],
          "title": "",
          "type": "Radio",
        }
      }
      canMoveDown={true}
      canMoveUp={true}
      minOptions={2}
      onAddExclusive={[MockFunction]}
      onAddOption={[MockFunction]}
      onChange={[MockFunction]}
      onDeleteAnswer={[MockFunction]}
      onDeleteOption={[MockFunction]}
      onMoveDown={[MockFunction]}
      onMoveUp={[MockFunction]}
      onUpdate={[MockFunction]}
      onUpdateOption={[MockFunction]}
      type="Radio"
    />
  </AnswerEditor__Padding>
</AnswerEditor__Answer>
`;

exports[`Answer Editor should render TextArea 1`] = `
<AnswerEditor__Answer
  data-test="answer-editor"
>
  <AnswerEditor__AnswerHeader>
    <AnswerEditor__AnswerType
      data-test="answer-type"
    >
      TextArea
    </AnswerEditor__AnswerType>
    <AnswerEditor__Buttons>
      <Tooltip
        content="Move answer up"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-up"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Move answer down"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-down"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Delete answer"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <DeleteButton
          aria-label="Delete answer"
          data-test="btn-delete-answer"
          onClick={[Function]}
          size="medium"
          type="button"
        />
      </Tooltip>
    </AnswerEditor__Buttons>
  </AnswerEditor__AnswerHeader>
  <AnswerEditor__Padding>
    <withValidationError(Connect(withEntityEditor(StatelessBasicAnswer)))
      answer={
        Object {
          "description": "",
          "id": "1",
          "title": "",
          "type": "TextArea",
        }
      }
      canMoveDown={true}
      canMoveUp={true}
      enableValidationMessage={true}
      onAddExclusive={[MockFunction]}
      onAddOption={[MockFunction]}
      onChange={[MockFunction]}
      onDeleteAnswer={[MockFunction]}
      onDeleteOption={[MockFunction]}
      onMoveDown={[MockFunction]}
      onMoveUp={[MockFunction]}
      onUpdate={[MockFunction]}
      onUpdateOption={[MockFunction]}
    />
  </AnswerEditor__Padding>
</AnswerEditor__Answer>
`;

exports[`Answer Editor should render TextField 1`] = `
<AnswerEditor__Answer
  data-test="answer-editor"
>
  <AnswerEditor__AnswerHeader>
    <AnswerEditor__AnswerType
      data-test="answer-type"
    >
      TextField
    </AnswerEditor__AnswerType>
    <AnswerEditor__Buttons>
      <Tooltip
        content="Move answer up"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-up"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Move answer down"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-down"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Delete answer"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <DeleteButton
          aria-label="Delete answer"
          data-test="btn-delete-answer"
          onClick={[Function]}
          size="medium"
          type="button"
        />
      </Tooltip>
    </AnswerEditor__Buttons>
  </AnswerEditor__AnswerHeader>
  <AnswerEditor__Padding>
    <withValidationError(Connect(withEntityEditor(StatelessBasicAnswer)))
      answer={
        Object {
          "description": "",
          "id": "1",
          "title": "",
          "type": "TextField",
        }
      }
      canMoveDown={true}
      canMoveUp={true}
      enableValidationMessage={true}
      onAddExclusive={[MockFunction]}
      onAddOption={[MockFunction]}
      onChange={[MockFunction]}
      onDeleteAnswer={[MockFunction]}
      onDeleteOption={[MockFunction]}
      onMoveDown={[MockFunction]}
      onMoveUp={[MockFunction]}
      onUpdate={[MockFunction]}
      onUpdateOption={[MockFunction]}
    />
  </AnswerEditor__Padding>
</AnswerEditor__Answer>
`;

exports[`Answer Editor should render Unit 1`] = `
<AnswerEditor__Answer
  data-test="answer-editor"
>
  <AnswerEditor__AnswerHeader>
    <AnswerEditor__AnswerType
      data-test="answer-type"
    >
      Length
       (cm)
    </AnswerEditor__AnswerType>
    <AnswerEditor__Buttons>
      <Tooltip
        content="Move answer up"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-up"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Move answer down"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <MoveButton
          data-test="btn-move-answer-down"
          disabled={false}
          onClick={[MockFunction]}
        >
          <Component />
        </MoveButton>
      </Tooltip>
      <Tooltip
        content="Delete answer"
        offset={
          Object {
            "bottom": 10,
            "top": 0,
          }
        }
        place="top"
      >
        <DeleteButton
          aria-label="Delete answer"
          data-test="btn-delete-answer"
          onClick={[Function]}
          size="medium"
          type="button"
        />
      </Tooltip>
    </AnswerEditor__Buttons>
  </AnswerEditor__AnswerHeader>
  <AnswerEditor__Padding>
    <withValidationError(Connect(withEntityEditor(StatelessBasicAnswer)))
      answer={
        Object {
          "description": "",
          "id": "1",
          "properties": Object {
            "unit": "Centimetres",
          },
          "title": "",
          "type": "Unit",
        }
      }
      canMoveDown={true}
      canMoveUp={true}
      enableValidationMessage={true}
      onAddExclusive={[MockFunction]}
      onAddOption={[MockFunction]}
      onChange={[MockFunction]}
      onDeleteAnswer={[MockFunction]}
      onDeleteOption={[MockFunction]}
      onMoveDown={[MockFunction]}
      onMoveUp={[MockFunction]}
      onUpdate={[MockFunction]}
      onUpdateOption={[MockFunction]}
      showDescription={true}
    />
  </AnswerEditor__Padding>
</AnswerEditor__Answer>
`;
