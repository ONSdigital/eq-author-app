// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdditionalInfo should display the correct error message when the additional info content is missing 1`] = `
<TransitionGroup
  childFactory={[Function]}
  component="div"
>
  <AnswerTransition
    key="additional-info"
    onEntered={[Function]}
    timeout={200}
  >
    <MultipleFieldEditor
      id="additional-info"
      label="Additional information"
    >
      <Field
        disabled={false}
        last={false}
      >
        <Label
          bold={true}
          htmlFor="additional-info-label"
        >
          Label
        </Label>
        <withChangeHandler(WrappingInput)
          bold={true}
          data-test="txt-question-additional-info-label"
          errorValidationMsg={null}
          id="additional-info-label"
          name="additionalInfoLabel"
          onBlur={[MockFunction]}
          onChange={[MockFunction]}
          value="<p>Additional Info Label</p>"
        />
      </Field>
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "bold": true,
            "emphasis": true,
            "list": true,
          }
        }
        disabled={false}
        errorValidationMsg="Enter additional information content"
        fetchAnswers={[MockFunction]}
        id="additional-info-content"
        label="Content"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="additionalInfoContent"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-additional-info-content"
        value="<p>Additional Info Content</p>"
      />
    </MultipleFieldEditor>
  </AnswerTransition>
</TransitionGroup>
`;

exports[`AdditionalInfo should display the correct error message when the additional info label is empty 1`] = `
<TransitionGroup
  childFactory={[Function]}
  component="div"
>
  <AnswerTransition
    key="additional-info"
    onEntered={[Function]}
    timeout={200}
  >
    <MultipleFieldEditor
      id="additional-info"
      label="Additional information"
    >
      <Field
        disabled={false}
        last={false}
      >
        <Label
          bold={true}
          htmlFor="additional-info-label"
        >
          Label
        </Label>
        <withChangeHandler(WrappingInput)
          bold={true}
          data-test="txt-question-additional-info-label"
          errorValidationMsg="Enter additional information label"
          id="additional-info-label"
          name="additionalInfoLabel"
          onBlur={[MockFunction]}
          onChange={[MockFunction]}
          value="<p>Additional Info Label</p>"
        />
      </Field>
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "bold": true,
            "emphasis": true,
            "list": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="additional-info-content"
        label="Content"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="additionalInfoContent"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-additional-info-content"
        value="<p>Additional Info Content</p>"
      />
    </MultipleFieldEditor>
  </AnswerTransition>
</TransitionGroup>
`;

exports[`AdditionalInfo should render 1`] = `
<TransitionGroup
  childFactory={[Function]}
  component="div"
>
  <AnswerTransition
    key="additional-info"
    onEntered={[Function]}
    timeout={200}
  >
    <MultipleFieldEditor
      id="additional-info"
      label="Additional information"
    >
      <Field
        disabled={false}
        last={false}
      >
        <Label
          bold={true}
          htmlFor="additional-info-label"
        >
          Label
        </Label>
        <withChangeHandler(WrappingInput)
          bold={true}
          data-test="txt-question-additional-info-label"
          errorValidationMsg={null}
          id="additional-info-label"
          name="additionalInfoLabel"
          onBlur={[MockFunction]}
          onChange={[MockFunction]}
          value="<p>Additional Info Label</p>"
        />
      </Field>
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "bold": true,
            "emphasis": true,
            "list": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="additional-info-content"
        label="Content"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="additionalInfoContent"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-additional-info-content"
        value="<p>Additional Info Content</p>"
      />
    </MultipleFieldEditor>
  </AnswerTransition>
</TransitionGroup>
`;
