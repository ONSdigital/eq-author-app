// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MetaEditor should display the correct error message when piping answer in title is deleted 1`] = `
<div>
  <RichTextEditor
    autoFocus={false}
    controls={
      Object {
        "emphasis": true,
        "piping": true,
      }
    }
    disabled={false}
    errorValidationMsg="The answer being piped has been deleted"
    fetchAnswers={[MockFunction]}
    id="question-title"
    label="Question"
    maxHeight={12}
    metadata={Array []}
    multiline={false}
    name="title"
    onUpdate={[MockFunction]}
    placeholder=""
    size="large"
    testSelector="txt-question-title"
    value="<p>Hello world</p>"
  />
  <TransitionGroup
    childFactory={[Function]}
    component="div"
  >
    <AnswerTransition
      key="question-description"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "emphasis": true,
            "piping": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-description"
        label="Question description"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="description"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-description"
        value="<p>Description</p>"
      />
    </AnswerTransition>
    <AnswerTransition
      key="definition"
      onEntered={[Function]}
      timeout={200}
    >
      <MultipleFieldEditor
        id="definition"
        label="Question definition"
      >
        <MetaEditor__Paragraph>
          Only to be used to define word(s) or acronym(s) within the question.
        </MetaEditor__Paragraph>
        <Field
          disabled={false}
          last={false}
        >
          <Label
            bold={true}
            htmlFor="definition-label"
          >
            Label
          </Label>
          <withChangeHandler(WrappingInput)
            bold={true}
            data-test="txt-question-definition-label"
            errorValidationMsg={null}
            id="definition-label"
            name="definitionLabel"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            value="<p>Definition Label</p>"
          />
        </Field>
        <RichTextEditor
          autoFocus={false}
          controls={
            Object {
              "bold": true,
              "emphasis": true,
              "list": true,
            }
          }
          disabled={false}
          errorValidationMsg={null}
          fetchAnswers={[MockFunction]}
          id="definition-content"
          label="Content"
          maxHeight={12}
          metadata={Array []}
          multiline={true}
          name="definitionContent"
          onUpdate={[MockFunction]}
          placeholder=""
          testSelector="txt-question-definition-content"
          value="<p>Definition Content</p>"
        />
      </MultipleFieldEditor>
    </AnswerTransition>
    <AnswerTransition
      key="question-guidance"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "bold": true,
            "list": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-guidance"
        label="Include/exclude"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="guidance"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-guidance"
        value="<p>Guidance</p>"
      />
    </AnswerTransition>
  </TransitionGroup>
</div>
`;

exports[`MetaEditor should display the correct error message when piping answer in title is moved after This question 1`] = `
<div>
  <RichTextEditor
    autoFocus={false}
    controls={
      Object {
        "emphasis": true,
        "piping": true,
      }
    }
    disabled={false}
    errorValidationMsg="The answer being piped is now later in the questionnaire"
    fetchAnswers={[MockFunction]}
    id="question-title"
    label="Question"
    maxHeight={12}
    metadata={Array []}
    multiline={false}
    name="title"
    onUpdate={[MockFunction]}
    placeholder=""
    size="large"
    testSelector="txt-question-title"
    value="<p>Hello world</p>"
  />
  <TransitionGroup
    childFactory={[Function]}
    component="div"
  >
    <AnswerTransition
      key="question-description"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "emphasis": true,
            "piping": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-description"
        label="Question description"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="description"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-description"
        value="<p>Description</p>"
      />
    </AnswerTransition>
    <AnswerTransition
      key="definition"
      onEntered={[Function]}
      timeout={200}
    >
      <MultipleFieldEditor
        id="definition"
        label="Question definition"
      >
        <MetaEditor__Paragraph>
          Only to be used to define word(s) or acronym(s) within the question.
        </MetaEditor__Paragraph>
        <Field
          disabled={false}
          last={false}
        >
          <Label
            bold={true}
            htmlFor="definition-label"
          >
            Label
          </Label>
          <withChangeHandler(WrappingInput)
            bold={true}
            data-test="txt-question-definition-label"
            errorValidationMsg={null}
            id="definition-label"
            name="definitionLabel"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            value="<p>Definition Label</p>"
          />
        </Field>
        <RichTextEditor
          autoFocus={false}
          controls={
            Object {
              "bold": true,
              "emphasis": true,
              "list": true,
            }
          }
          disabled={false}
          errorValidationMsg={null}
          fetchAnswers={[MockFunction]}
          id="definition-content"
          label="Content"
          maxHeight={12}
          metadata={Array []}
          multiline={true}
          name="definitionContent"
          onUpdate={[MockFunction]}
          placeholder=""
          testSelector="txt-question-definition-content"
          value="<p>Definition Content</p>"
        />
      </MultipleFieldEditor>
    </AnswerTransition>
    <AnswerTransition
      key="question-guidance"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "bold": true,
            "list": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-guidance"
        label="Include/exclude"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="guidance"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-guidance"
        value="<p>Guidance</p>"
      />
    </AnswerTransition>
  </TransitionGroup>
</div>
`;

exports[`MetaEditor should display the correct error message when the definition content is missing 1`] = `
<div>
  <RichTextEditor
    autoFocus={false}
    controls={
      Object {
        "emphasis": true,
        "piping": true,
      }
    }
    disabled={false}
    errorValidationMsg={null}
    fetchAnswers={[MockFunction]}
    id="question-title"
    label="Question"
    maxHeight={12}
    metadata={Array []}
    multiline={false}
    name="title"
    onUpdate={[MockFunction]}
    placeholder=""
    size="large"
    testSelector="txt-question-title"
    value="<p>Hello world</p>"
  />
  <TransitionGroup
    childFactory={[Function]}
    component="div"
  >
    <AnswerTransition
      key="question-description"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "emphasis": true,
            "piping": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-description"
        label="Question description"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="description"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-description"
        value="<p>Description</p>"
      />
    </AnswerTransition>
    <AnswerTransition
      key="definition"
      onEntered={[Function]}
      timeout={200}
    >
      <MultipleFieldEditor
        id="definition"
        label="Question definition"
      >
        <MetaEditor__Paragraph>
          Only to be used to define word(s) or acronym(s) within the question.
        </MetaEditor__Paragraph>
        <Field
          disabled={false}
          last={false}
        >
          <Label
            bold={true}
            htmlFor="definition-label"
          >
            Label
          </Label>
          <withChangeHandler(WrappingInput)
            bold={true}
            data-test="txt-question-definition-label"
            errorValidationMsg={null}
            id="definition-label"
            name="definitionLabel"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            value="<p>Definition Label</p>"
          />
        </Field>
        <RichTextEditor
          autoFocus={false}
          controls={
            Object {
              "bold": true,
              "emphasis": true,
              "list": true,
            }
          }
          disabled={false}
          errorValidationMsg="Enter definition content"
          fetchAnswers={[MockFunction]}
          id="definition-content"
          label="Content"
          maxHeight={12}
          metadata={Array []}
          multiline={true}
          name="definitionContent"
          onUpdate={[MockFunction]}
          placeholder=""
          testSelector="txt-question-definition-content"
          value="<p>Definition Content</p>"
        />
      </MultipleFieldEditor>
    </AnswerTransition>
    <AnswerTransition
      key="question-guidance"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "bold": true,
            "list": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-guidance"
        label="Include/exclude"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="guidance"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-guidance"
        value="<p>Guidance</p>"
      />
    </AnswerTransition>
  </TransitionGroup>
</div>
`;

exports[`MetaEditor should display the correct error message when the definition label is missing 1`] = `
<div>
  <RichTextEditor
    autoFocus={false}
    controls={
      Object {
        "emphasis": true,
        "piping": true,
      }
    }
    disabled={false}
    errorValidationMsg={null}
    fetchAnswers={[MockFunction]}
    id="question-title"
    label="Question"
    maxHeight={12}
    metadata={Array []}
    multiline={false}
    name="title"
    onUpdate={[MockFunction]}
    placeholder=""
    size="large"
    testSelector="txt-question-title"
    value="<p>Hello world</p>"
  />
  <TransitionGroup
    childFactory={[Function]}
    component="div"
  >
    <AnswerTransition
      key="question-description"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "emphasis": true,
            "piping": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-description"
        label="Question description"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="description"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-description"
        value="<p>Description</p>"
      />
    </AnswerTransition>
    <AnswerTransition
      key="definition"
      onEntered={[Function]}
      timeout={200}
    >
      <MultipleFieldEditor
        id="definition"
        label="Question definition"
      >
        <MetaEditor__Paragraph>
          Only to be used to define word(s) or acronym(s) within the question.
        </MetaEditor__Paragraph>
        <Field
          disabled={false}
          last={false}
        >
          <Label
            bold={true}
            htmlFor="definition-label"
          >
            Label
          </Label>
          <withChangeHandler(WrappingInput)
            bold={true}
            data-test="txt-question-definition-label"
            errorValidationMsg="Enter definition label"
            id="definition-label"
            name="definitionLabel"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            value="<p>Definition Label</p>"
          />
        </Field>
        <RichTextEditor
          autoFocus={false}
          controls={
            Object {
              "bold": true,
              "emphasis": true,
              "list": true,
            }
          }
          disabled={false}
          errorValidationMsg={null}
          fetchAnswers={[MockFunction]}
          id="definition-content"
          label="Content"
          maxHeight={12}
          metadata={Array []}
          multiline={true}
          name="definitionContent"
          onUpdate={[MockFunction]}
          placeholder=""
          testSelector="txt-question-definition-content"
          value="<p>Definition Content</p>"
        />
      </MultipleFieldEditor>
    </AnswerTransition>
    <AnswerTransition
      key="question-guidance"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "bold": true,
            "list": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-guidance"
        label="Include/exclude"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="guidance"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-guidance"
        value="<p>Guidance</p>"
      />
    </AnswerTransition>
  </TransitionGroup>
</div>
`;

exports[`MetaEditor should display the correct error message when the description is enabled and empty 1`] = `
<div>
  <RichTextEditor
    autoFocus={false}
    controls={
      Object {
        "emphasis": true,
        "piping": true,
      }
    }
    disabled={false}
    errorValidationMsg={null}
    fetchAnswers={[MockFunction]}
    id="question-title"
    label="Question"
    maxHeight={12}
    metadata={Array []}
    multiline={false}
    name="title"
    onUpdate={[MockFunction]}
    placeholder=""
    size="large"
    testSelector="txt-question-title"
    value="<p>Hello world</p>"
  />
  <TransitionGroup
    childFactory={[Function]}
    component="div"
  >
    <AnswerTransition
      key="question-description"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "emphasis": true,
            "piping": true,
          }
        }
        disabled={false}
        errorValidationMsg="Enter a question description"
        fetchAnswers={[MockFunction]}
        id="question-description"
        label="Question description"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="description"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-description"
        value="<p>Description</p>"
      />
    </AnswerTransition>
    <AnswerTransition
      key="definition"
      onEntered={[Function]}
      timeout={200}
    >
      <MultipleFieldEditor
        id="definition"
        label="Question definition"
      >
        <MetaEditor__Paragraph>
          Only to be used to define word(s) or acronym(s) within the question.
        </MetaEditor__Paragraph>
        <Field
          disabled={false}
          last={false}
        >
          <Label
            bold={true}
            htmlFor="definition-label"
          >
            Label
          </Label>
          <withChangeHandler(WrappingInput)
            bold={true}
            data-test="txt-question-definition-label"
            errorValidationMsg={null}
            id="definition-label"
            name="definitionLabel"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            value="<p>Definition Label</p>"
          />
        </Field>
        <RichTextEditor
          autoFocus={false}
          controls={
            Object {
              "bold": true,
              "emphasis": true,
              "list": true,
            }
          }
          disabled={false}
          errorValidationMsg={null}
          fetchAnswers={[MockFunction]}
          id="definition-content"
          label="Content"
          maxHeight={12}
          metadata={Array []}
          multiline={true}
          name="definitionContent"
          onUpdate={[MockFunction]}
          placeholder=""
          testSelector="txt-question-definition-content"
          value="<p>Definition Content</p>"
        />
      </MultipleFieldEditor>
    </AnswerTransition>
    <AnswerTransition
      key="question-guidance"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "bold": true,
            "list": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-guidance"
        label="Include/exclude"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="guidance"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-guidance"
        value="<p>Guidance</p>"
      />
    </AnswerTransition>
  </TransitionGroup>
</div>
`;

exports[`MetaEditor should display the correct error message when the includes/excludes content is missing 1`] = `
<div>
  <RichTextEditor
    autoFocus={false}
    controls={
      Object {
        "emphasis": true,
        "piping": true,
      }
    }
    disabled={false}
    errorValidationMsg={null}
    fetchAnswers={[MockFunction]}
    id="question-title"
    label="Question"
    maxHeight={12}
    metadata={Array []}
    multiline={false}
    name="title"
    onUpdate={[MockFunction]}
    placeholder=""
    size="large"
    testSelector="txt-question-title"
    value="<p>Hello world</p>"
  />
  <TransitionGroup
    childFactory={[Function]}
    component="div"
  >
    <AnswerTransition
      key="question-description"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "emphasis": true,
            "piping": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-description"
        label="Question description"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="description"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-description"
        value="<p>Description</p>"
      />
    </AnswerTransition>
    <AnswerTransition
      key="definition"
      onEntered={[Function]}
      timeout={200}
    >
      <MultipleFieldEditor
        id="definition"
        label="Question definition"
      >
        <MetaEditor__Paragraph>
          Only to be used to define word(s) or acronym(s) within the question.
        </MetaEditor__Paragraph>
        <Field
          disabled={false}
          last={false}
        >
          <Label
            bold={true}
            htmlFor="definition-label"
          >
            Label
          </Label>
          <withChangeHandler(WrappingInput)
            bold={true}
            data-test="txt-question-definition-label"
            errorValidationMsg={null}
            id="definition-label"
            name="definitionLabel"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            value="<p>Definition Label</p>"
          />
        </Field>
        <RichTextEditor
          autoFocus={false}
          controls={
            Object {
              "bold": true,
              "emphasis": true,
              "list": true,
            }
          }
          disabled={false}
          errorValidationMsg={null}
          fetchAnswers={[MockFunction]}
          id="definition-content"
          label="Content"
          maxHeight={12}
          metadata={Array []}
          multiline={true}
          name="definitionContent"
          onUpdate={[MockFunction]}
          placeholder=""
          testSelector="txt-question-definition-content"
          value="<p>Definition Content</p>"
        />
      </MultipleFieldEditor>
    </AnswerTransition>
    <AnswerTransition
      key="question-guidance"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "bold": true,
            "list": true,
          }
        }
        disabled={false}
        errorValidationMsg="Enter include/exclude content"
        fetchAnswers={[MockFunction]}
        id="question-guidance"
        label="Include/exclude"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="guidance"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-guidance"
        value="<p>Guidance</p>"
      />
    </AnswerTransition>
  </TransitionGroup>
</div>
`;

exports[`MetaEditor should display the correct error message when the title is missing 1`] = `
<div>
  <RichTextEditor
    autoFocus={false}
    controls={
      Object {
        "emphasis": true,
        "piping": true,
      }
    }
    disabled={false}
    errorValidationMsg="Enter a question title"
    fetchAnswers={[MockFunction]}
    id="question-title"
    label="Question"
    maxHeight={12}
    metadata={Array []}
    multiline={false}
    name="title"
    onUpdate={[MockFunction]}
    placeholder=""
    size="large"
    testSelector="txt-question-title"
    value="<p>Hello world</p>"
  />
  <TransitionGroup
    childFactory={[Function]}
    component="div"
  >
    <AnswerTransition
      key="question-description"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "emphasis": true,
            "piping": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-description"
        label="Question description"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="description"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-description"
        value="<p>Description</p>"
      />
    </AnswerTransition>
    <AnswerTransition
      key="definition"
      onEntered={[Function]}
      timeout={200}
    >
      <MultipleFieldEditor
        id="definition"
        label="Question definition"
      >
        <MetaEditor__Paragraph>
          Only to be used to define word(s) or acronym(s) within the question.
        </MetaEditor__Paragraph>
        <Field
          disabled={false}
          last={false}
        >
          <Label
            bold={true}
            htmlFor="definition-label"
          >
            Label
          </Label>
          <withChangeHandler(WrappingInput)
            bold={true}
            data-test="txt-question-definition-label"
            errorValidationMsg={null}
            id="definition-label"
            name="definitionLabel"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            value="<p>Definition Label</p>"
          />
        </Field>
        <RichTextEditor
          autoFocus={false}
          controls={
            Object {
              "bold": true,
              "emphasis": true,
              "list": true,
            }
          }
          disabled={false}
          errorValidationMsg={null}
          fetchAnswers={[MockFunction]}
          id="definition-content"
          label="Content"
          maxHeight={12}
          metadata={Array []}
          multiline={true}
          name="definitionContent"
          onUpdate={[MockFunction]}
          placeholder=""
          testSelector="txt-question-definition-content"
          value="<p>Definition Content</p>"
        />
      </MultipleFieldEditor>
    </AnswerTransition>
    <AnswerTransition
      key="question-guidance"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "bold": true,
            "list": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-guidance"
        label="Include/exclude"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="guidance"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-guidance"
        value="<p>Guidance</p>"
      />
    </AnswerTransition>
  </TransitionGroup>
</div>
`;

exports[`MetaEditor should render 1`] = `
<div>
  <RichTextEditor
    autoFocus={false}
    controls={
      Object {
        "emphasis": true,
        "piping": true,
      }
    }
    disabled={false}
    errorValidationMsg={null}
    fetchAnswers={[MockFunction]}
    id="question-title"
    label="Question"
    maxHeight={12}
    metadata={Array []}
    multiline={false}
    name="title"
    onUpdate={[MockFunction]}
    placeholder=""
    size="large"
    testSelector="txt-question-title"
    value="<p>Hello world</p>"
  />
  <TransitionGroup
    childFactory={[Function]}
    component="div"
  >
    <AnswerTransition
      key="question-description"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "emphasis": true,
            "piping": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-description"
        label="Question description"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="description"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-description"
        value="<p>Description</p>"
      />
    </AnswerTransition>
    <AnswerTransition
      key="definition"
      onEntered={[Function]}
      timeout={200}
    >
      <MultipleFieldEditor
        id="definition"
        label="Question definition"
      >
        <MetaEditor__Paragraph>
          Only to be used to define word(s) or acronym(s) within the question.
        </MetaEditor__Paragraph>
        <Field
          disabled={false}
          last={false}
        >
          <Label
            bold={true}
            htmlFor="definition-label"
          >
            Label
          </Label>
          <withChangeHandler(WrappingInput)
            bold={true}
            data-test="txt-question-definition-label"
            errorValidationMsg={null}
            id="definition-label"
            name="definitionLabel"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            value="<p>Definition Label</p>"
          />
        </Field>
        <RichTextEditor
          autoFocus={false}
          controls={
            Object {
              "bold": true,
              "emphasis": true,
              "list": true,
            }
          }
          disabled={false}
          errorValidationMsg={null}
          fetchAnswers={[MockFunction]}
          id="definition-content"
          label="Content"
          maxHeight={12}
          metadata={Array []}
          multiline={true}
          name="definitionContent"
          onUpdate={[MockFunction]}
          placeholder=""
          testSelector="txt-question-definition-content"
          value="<p>Definition Content</p>"
        />
      </MultipleFieldEditor>
    </AnswerTransition>
    <AnswerTransition
      key="question-guidance"
      onEntered={[Function]}
      timeout={200}
    >
      <RichTextEditor
        autoFocus={false}
        controls={
          Object {
            "bold": true,
            "list": true,
          }
        }
        disabled={false}
        errorValidationMsg={null}
        fetchAnswers={[MockFunction]}
        id="question-guidance"
        label="Include/exclude"
        maxHeight={12}
        metadata={Array []}
        multiline={true}
        name="guidance"
        onUpdate={[MockFunction]}
        placeholder=""
        testSelector="txt-question-guidance"
        value="<p>Guidance</p>"
      />
    </AnswerTransition>
  </TransitionGroup>
</div>
`;
