// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RuleEditor should render 1`] = `
<div
  data-test="routing-rule"
>
  <RuleEditor__Box>
    <RuleEditor__Buttons>
      <Button
        data-test="btn-delete"
        onClick={[Function]}
        small={true}
        type="button"
        variant="tertiary"
      >
        <IconText
          hideText={false}
          icon={[Function]}
        >
          Remove rule
        </IconText>
      </Button>
    </RuleEditor__Buttons>
    <div>
      <TransitionGroup
        childFactory={[Function]}
        component="div"
      >
        <Transition__RoutingComponentTransition
          exit={false}
          key="1"
          timeout={200}
        >
          <Apollo(Apollo(Apollo(Apollo(withRouter(UnwrappedBinaryExpressionEditor)))))
            canAddAndCondition={true}
            expression={
              Object {
                "id": "1",
                "left": Object {
                  "id": "binaryExpressionId",
                  "type": "Currency",
                },
              }
            }
            isOnlyExpression={true}
            label="IF"
          />
        </Transition__RoutingComponentTransition>
      </TransitionGroup>
      <Grid
        align="center"
        fillHeight={true}
      >
        <RuleEditor__CenteringColumn
          cols={1}
          gutters={false}
        >
          <TextButton
            data-test="btn-and"
            onClick={[Function]}
          >
            AND
          </TextButton>
        </RuleEditor__CenteringColumn>
      </Grid>
    </div>
    <withRouter(UnwrappedDestinationSelector)
      data-test="select-then"
      id="ruleId"
      label="THEN"
      onChange={[Function]}
      value={
        Object {
          "id": "1",
          "logical": null,
          "page": Object {
            "displayName": "Page",
            "id": "pageId",
          },
          "section": null,
        }
      }
    />
  </RuleEditor__Box>
</div>
`;
