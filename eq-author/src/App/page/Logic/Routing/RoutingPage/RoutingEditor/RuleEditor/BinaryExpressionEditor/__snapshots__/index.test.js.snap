// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BinaryExpressionEditor should render consistently 1`] = `
<div>
  <Grid
    align="center"
    fillHeight={true}
  >
    <Column
      cols={1.5}
      gutters={false}
    >
      <BinaryExpressionEditor__Label
        data-test="routing-binary-expression-if-label"
        htmlFor="RoutingCondition1"
      >
        If
      </BinaryExpressionEditor__Label>
    </Column>
    <Column
      cols={8}
      gutters={false}
    >
      <BinaryExpressionEditor__Flex>
        <BinaryExpressionEditor__ContentPicker
          data-test="routing-answer-picker"
          onSubmit={[Function]}
          path="page.availableRoutingAnswers"
          selectedId="2"
        />
      </BinaryExpressionEditor__Flex>
    </Column>
    <Column
      cols={2.5}
      gutters={false}
    >
      <BinaryExpressionEditor__ActionButtons
        data-test="action-btns"
      >
        <BinaryExpressionEditor__RemoveButton
          data-test="btn-remove"
          disabled={false}
          onClick={[Function]}
        >
          <IconText
            hideText={true}
            icon={[Function]}
          >
            Remove
          </IconText>
        </BinaryExpressionEditor__RemoveButton>
        <BinaryExpressionEditor__AddButton
          data-test="btn-add"
          onClick={[Function]}
        >
          <IconText
            hideText={true}
            icon={[Function]}
          >
            Add
          </IconText>
        </BinaryExpressionEditor__AddButton>
      </BinaryExpressionEditor__ActionButtons>
    </Column>
  </Grid>
  <BinaryExpressionEditor__DefaultRouteDiv
    hasPadding={false}
  >
    <Grid
      align="top"
      fillHeight={true}
    >
      <Column
        cols={1.5}
        gutters={false}
      >
        <BinaryExpressionEditor__ConnectedPath
          pathEnd={false}
        />
      </Column>
      <Column
        cols={8}
        gutters={false}
      >
        <BinaryExpressionEditor__StyledTransition
          data-test="transition-condition"
          isHidden={false}
        >
          <TransitionGroup
            childFactory={[Function]}
            component="div"
          >
            <Transition__RoutingComponentTransition
              key="answer"
              timeout={200}
            >
              <MultipleChoiceAnswerOptionsSelector
                expression={
                  Object {
                    "condition": "Equal",
                    "id": "1",
                    "left": Object {
                      "id": "2",
                      "type": "Radio",
                    },
                    "right": null,
                  }
                }
                onConditionChange={[Function]}
                onRightChange={[Function]}
              />
            </Transition__RoutingComponentTransition>
          </TransitionGroup>
        </BinaryExpressionEditor__StyledTransition>
      </Column>
      <Column
        cols={2.5}
      />
    </Grid>
  </BinaryExpressionEditor__DefaultRouteDiv>
</div>
`;
