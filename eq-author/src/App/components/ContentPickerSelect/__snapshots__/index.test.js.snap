// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContentPickerSelect content types should render answer  1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    name="contentPicker"
    onClick={[Function]}
    onSubmit={[MockFunction]}
    selectedContentDisplayName="foobar"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPickerModal
    contentTypes={
      Array [
        "Custom",
      ]
    }
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
  />
</Fragment>
`;

exports[`ContentPickerSelect content types should render answer and metadata 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    name="contentPicker"
    onClick={[Function]}
    onSubmit={[MockFunction]}
    selectedContentDisplayName="foobar"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPickerModal
    contentTypes={
      Array [
        "Custom",
        "Metadata",
      ]
    }
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
  />
</Fragment>
`;

exports[`ContentPickerSelect content types should render destination 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    name="contentPicker"
    onClick={[Function]}
    onSubmit={[MockFunction]}
    selectedContentDisplayName="foobar"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPickerModal
    contentTypes={
      Array [
        "Destination",
      ]
    }
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
  />
</Fragment>
`;

exports[`ContentPickerSelect content types should render metadata 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    name="contentPicker"
    onClick={[Function]}
    onSubmit={[MockFunction]}
    selectedContentDisplayName="foobar"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPickerModal
    contentTypes={
      Array [
        "Metadata",
      ]
    }
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
  />
</Fragment>
`;

exports[`ContentPickerSelect content types should render question 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    name="contentPicker"
    onClick={[Function]}
    onSubmit={[MockFunction]}
    selectedContentDisplayName="foobar"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPickerModal
    contentTypes={
      Array [
        "Question",
      ]
    }
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
  />
</Fragment>
`;

exports[`ContentPickerSelect metadata types should correctly filter by type 1`] = `
Object {
  "answerData": undefined,
  "contentTypes": Array [
    "Metadata",
  ],
  "data-test": "picker",
  "destinationData": undefined,
  "isOpen": false,
  "metadataData": undefined,
  "onClose": [Function],
  "onSubmit": [Function],
  "questionData": undefined,
}
`;

exports[`ContentPickerSelect metadata types should correctly filter empty metadata 1`] = `
Object {
  "answerData": undefined,
  "contentTypes": Array [
    "Metadata",
  ],
  "data-test": "picker",
  "destinationData": undefined,
  "isOpen": false,
  "metadataData": undefined,
  "onClose": [Function],
  "onSubmit": [Function],
  "questionData": undefined,
}
`;

exports[`ContentPickerSelect metadata types should correctly show all types when none specified 1`] = `
Object {
  "answerData": undefined,
  "contentTypes": Array [
    "Metadata",
  ],
  "data-test": "picker",
  "destinationData": undefined,
  "isOpen": false,
  "metadataData": undefined,
  "onClose": [Function],
  "onSubmit": [Function],
  "questionData": undefined,
}
`;

exports[`ContentPickerSelect should correctly handle picker close 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    name="contentPicker"
    onClick={[Function]}
    onSubmit={[MockFunction]}
    selectedContentDisplayName="foobar"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPickerModal
    contentTypes={
      Array [
        "Custom",
      ]
    }
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
  />
</Fragment>
`;

exports[`ContentPickerSelect should correctly handle picker open 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    name="contentPicker"
    onClick={[Function]}
    onSubmit={[MockFunction]}
    selectedContentDisplayName="foobar"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPickerModal
    contentTypes={
      Array [
        "Custom",
      ]
    }
    data-test="picker"
    isOpen={true}
    onClose={[Function]}
    onSubmit={[Function]}
  />
</Fragment>
`;

exports[`ContentPickerSelect should disable select button correctly 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    disabled={true}
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    name="contentPicker"
    onClick={[Function]}
    onSubmit={[MockFunction]}
    selectedContentDisplayName="foobar"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPickerModal
    contentTypes={
      Array [
        "Custom",
      ]
    }
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
  />
</Fragment>
`;

exports[`ContentPickerSelect should disable select button correctly 2`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    disabled={true}
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    name="contentPicker"
    onClick={[Function]}
    onSubmit={[MockFunction]}
    selectedContentDisplayName="foobar"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPickerModal
    contentTypes={
      Array [
        "Custom",
      ]
    }
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
  />
</Fragment>
`;

exports[`ContentPickerSelect should render 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    name="contentPicker"
    onClick={[Function]}
    onSubmit={[MockFunction]}
    selectedContentDisplayName="foobar"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPickerModal
    contentTypes={
      Array [
        "Custom",
      ]
    }
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
  />
</Fragment>
`;
