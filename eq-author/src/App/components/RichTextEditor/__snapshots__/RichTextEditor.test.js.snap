// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/RichTextEditor should allow multiline input 1`] = `
<RichTextEditor__Wrapper
  size="small"
>
  <Field
    data-test="rte-field"
    last={false}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
  >
    <Label
      bold={true}
      id="label-test"
    >
      I am a label
    </Label>
    <RichTextEditor__Input
      placeholderStyle="unstyled"
    >
      <ToolBar
        autoFocus={false}
        controls={Object {}}
        editorState={
          EditorState {
            "_immutable": Immutable.Record {
              "allowUndo": true,
              "currentContent": Immutable.Record {
                "entityMap": Object {
                  "__add": [Function],
                  "__create": [Function],
                  "__get": [Function],
                  "__getLastCreatedEntityKey": [Function],
                  "__mergeData": [Function],
                  "__replaceData": [Function],
                  "add": [Function],
                  "create": [Function],
                  "get": [Function],
                  "getLastCreatedEntityKey": [Function],
                  "mergeData": [Function],
                  "replaceData": [Function],
                },
                "blockMap": Immutable.OrderedMap {
                  "123": Immutable.Record {
                    "key": "123",
                    "type": "unstyled",
                    "text": "",
                    "characterList": Immutable.List [],
                    "depth": 0,
                    "data": Immutable.Map {},
                  },
                },
                "selectionBefore": Immutable.Record {
                  "anchorKey": "123",
                  "anchorOffset": 0,
                  "focusKey": "123",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
                "selectionAfter": Immutable.Record {
                  "anchorKey": "123",
                  "anchorOffset": 0,
                  "focusKey": "123",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
              },
              "decorator": CompositeDraftDecorator {
                "_decorators": Array [
                  Object {
                    "component": [Function],
                    "strategy": [Function],
                  },
                ],
              },
              "directionMap": Immutable.OrderedMap {
                "123": "LTR",
              },
              "forceSelection": false,
              "inCompositionMode": false,
              "inlineStyleOverride": null,
              "lastChangeType": null,
              "nativelyRenderedContent": null,
              "redoStack": Immutable.Stack [],
              "selection": Immutable.Record {
                "anchorKey": "123",
                "anchorOffset": 0,
                "focusKey": "123",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
              "treeMap": Immutable.OrderedMap {
                "123": Immutable.List [
                  Immutable.Record {
                    "start": 0,
                    "end": 0,
                    "decoratorKey": null,
                    "leaves": Immutable.List [
                      Immutable.Record {
                        "start": 0,
                        "end": 0,
                      },
                    ],
                  },
                ],
              },
              "undoStack": Immutable.Stack [],
            },
          }
        }
        isActiveControl={[Function]}
        name="test-name"
        onPiping={[Function]}
        onToggle={[Function]}
        onUpdate={[MockFunction]}
        selectionIsCollapsed={true}
        visible={false}
      />
      <DraftEditor
        ariaLabel="I am a label"
        ariaLabelledBy="label-test"
        blockRenderMap={
          Immutable.Map {
            "ordered-list-item": Object {
              "element": "li",
              "wrapper": <ol
                className="public-DraftStyleDefault-ol"
              />,
            },
            "header-six": Object {
              "element": "h6",
            },
            "header-four": Object {
              "element": "h4",
            },
            "header-one": Object {
              "element": "h1",
            },
            "unordered-list-item": Object {
              "element": "li",
              "wrapper": <ul
                className="public-DraftStyleDefault-ul"
              />,
            },
            "atomic": Object {
              "element": "figure",
            },
            "unstyled": Object {
              "aliasedElements": Array [
                "p",
              ],
              "element": "div",
            },
            "header-two": Object {
              "element": "h2",
            },
            "code-block": Object {
              "element": "pre",
              "wrapper": <pre
                className="public-DraftStyleDefault-pre"
              />,
            },
            "blockquote": Object {
              "element": "blockquote",
            },
            "header-five": Object {
              "element": "h5",
            },
            "header-three": Object {
              "element": "h3",
            },
          }
        }
        blockRendererFn={[Function]}
        blockStyleFn={[Function]}
        customStyleMap={
          Object {
            "ITALIC": Object {
              "backgroundColor": "#cbe2c8",
            },
          }
        }
        editorState={
          EditorState {
            "_immutable": Immutable.Record {
              "allowUndo": true,
              "currentContent": Immutable.Record {
                "entityMap": Object {
                  "__add": [Function],
                  "__create": [Function],
                  "__get": [Function],
                  "__getLastCreatedEntityKey": [Function],
                  "__mergeData": [Function],
                  "__replaceData": [Function],
                  "add": [Function],
                  "create": [Function],
                  "get": [Function],
                  "getLastCreatedEntityKey": [Function],
                  "mergeData": [Function],
                  "replaceData": [Function],
                },
                "blockMap": Immutable.OrderedMap {
                  "123": Immutable.Record {
                    "key": "123",
                    "type": "unstyled",
                    "text": "",
                    "characterList": Immutable.List [],
                    "depth": 0,
                    "data": Immutable.Map {},
                  },
                },
                "selectionBefore": Immutable.Record {
                  "anchorKey": "123",
                  "anchorOffset": 0,
                  "focusKey": "123",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
                "selectionAfter": Immutable.Record {
                  "anchorKey": "123",
                  "anchorOffset": 0,
                  "focusKey": "123",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
              },
              "decorator": CompositeDraftDecorator {
                "_decorators": Array [
                  Object {
                    "component": [Function],
                    "strategy": [Function],
                  },
                ],
              },
              "directionMap": Immutable.OrderedMap {
                "123": "LTR",
              },
              "forceSelection": false,
              "inCompositionMode": false,
              "inlineStyleOverride": null,
              "lastChangeType": null,
              "nativelyRenderedContent": null,
              "redoStack": Immutable.Stack [],
              "selection": Immutable.Record {
                "anchorKey": "123",
                "anchorOffset": 0,
                "focusKey": "123",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
              "treeMap": Immutable.OrderedMap {
                "123": Immutable.List [
                  Immutable.Record {
                    "start": 0,
                    "end": 0,
                    "decoratorKey": null,
                    "leaves": Immutable.List [
                      Immutable.Record {
                        "start": 0,
                        "end": 0,
                      },
                    ],
                  },
                ],
              },
              "undoStack": Immutable.Stack [],
            },
          }
        }
        keyBindingFn={[Function]}
        onChange={[Function]}
        placeholder=""
        readOnly={false}
        spellCheck={true}
        stripPastedStyles={false}
      />
    </RichTextEditor__Input>
  </Field>
</RichTextEditor__Wrapper>
`;

exports[`components/RichTextEditor should render 1`] = `
<RichTextEditor__Wrapper
  size="small"
>
  <Field
    data-test="rte-field"
    last={false}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
  >
    <Label
      bold={true}
      id="label-test"
    >
      I am a label
    </Label>
    <RichTextEditor__Input
      placeholderStyle="unstyled"
    >
      <ToolBar
        autoFocus={false}
        controls={Object {}}
        editorState={
          EditorState {
            "_immutable": Immutable.Record {
              "allowUndo": true,
              "currentContent": Immutable.Record {
                "entityMap": Object {
                  "__add": [Function],
                  "__create": [Function],
                  "__get": [Function],
                  "__getLastCreatedEntityKey": [Function],
                  "__mergeData": [Function],
                  "__replaceData": [Function],
                  "add": [Function],
                  "create": [Function],
                  "get": [Function],
                  "getLastCreatedEntityKey": [Function],
                  "mergeData": [Function],
                  "replaceData": [Function],
                },
                "blockMap": Immutable.OrderedMap {
                  "123": Immutable.Record {
                    "key": "123",
                    "type": "unstyled",
                    "text": "",
                    "characterList": Immutable.List [],
                    "depth": 0,
                    "data": Immutable.Map {},
                  },
                },
                "selectionBefore": Immutable.Record {
                  "anchorKey": "123",
                  "anchorOffset": 0,
                  "focusKey": "123",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
                "selectionAfter": Immutable.Record {
                  "anchorKey": "123",
                  "anchorOffset": 0,
                  "focusKey": "123",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
              },
              "decorator": CompositeDraftDecorator {
                "_decorators": Array [
                  Object {
                    "component": [Function],
                    "strategy": [Function],
                  },
                ],
              },
              "directionMap": Immutable.OrderedMap {
                "123": "LTR",
              },
              "forceSelection": false,
              "inCompositionMode": false,
              "inlineStyleOverride": null,
              "lastChangeType": null,
              "nativelyRenderedContent": null,
              "redoStack": Immutable.Stack [],
              "selection": Immutable.Record {
                "anchorKey": "123",
                "anchorOffset": 0,
                "focusKey": "123",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
              "treeMap": Immutable.OrderedMap {
                "123": Immutable.List [
                  Immutable.Record {
                    "start": 0,
                    "end": 0,
                    "decoratorKey": null,
                    "leaves": Immutable.List [
                      Immutable.Record {
                        "start": 0,
                        "end": 0,
                      },
                    ],
                  },
                ],
              },
              "undoStack": Immutable.Stack [],
            },
          }
        }
        isActiveControl={[Function]}
        name="test-name"
        onPiping={[Function]}
        onToggle={[Function]}
        onUpdate={[MockFunction]}
        selectionIsCollapsed={true}
        visible={false}
      />
      <DraftEditor
        ariaLabel="I am a label"
        ariaLabelledBy="label-test"
        blockRenderMap={
          Immutable.Map {
            "ordered-list-item": Object {
              "element": "li",
              "wrapper": <ol
                className="public-DraftStyleDefault-ol"
              />,
            },
            "header-six": Object {
              "element": "h6",
            },
            "header-four": Object {
              "element": "h4",
            },
            "header-one": Object {
              "element": "h1",
            },
            "unordered-list-item": Object {
              "element": "li",
              "wrapper": <ul
                className="public-DraftStyleDefault-ul"
              />,
            },
            "atomic": Object {
              "element": "figure",
            },
            "unstyled": Object {
              "aliasedElements": Array [
                "p",
              ],
              "element": "div",
            },
            "header-two": Object {
              "element": "h2",
            },
            "code-block": Object {
              "element": "pre",
              "wrapper": <pre
                className="public-DraftStyleDefault-pre"
              />,
            },
            "blockquote": Object {
              "element": "blockquote",
            },
            "header-five": Object {
              "element": "h5",
            },
            "header-three": Object {
              "element": "h3",
            },
          }
        }
        blockRendererFn={[Function]}
        blockStyleFn={[Function]}
        customStyleMap={
          Object {
            "ITALIC": Object {
              "backgroundColor": "#cbe2c8",
            },
          }
        }
        editorState={
          EditorState {
            "_immutable": Immutable.Record {
              "allowUndo": true,
              "currentContent": Immutable.Record {
                "entityMap": Object {
                  "__add": [Function],
                  "__create": [Function],
                  "__get": [Function],
                  "__getLastCreatedEntityKey": [Function],
                  "__mergeData": [Function],
                  "__replaceData": [Function],
                  "add": [Function],
                  "create": [Function],
                  "get": [Function],
                  "getLastCreatedEntityKey": [Function],
                  "mergeData": [Function],
                  "replaceData": [Function],
                },
                "blockMap": Immutable.OrderedMap {
                  "123": Immutable.Record {
                    "key": "123",
                    "type": "unstyled",
                    "text": "",
                    "characterList": Immutable.List [],
                    "depth": 0,
                    "data": Immutable.Map {},
                  },
                },
                "selectionBefore": Immutable.Record {
                  "anchorKey": "123",
                  "anchorOffset": 0,
                  "focusKey": "123",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
                "selectionAfter": Immutable.Record {
                  "anchorKey": "123",
                  "anchorOffset": 0,
                  "focusKey": "123",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
              },
              "decorator": CompositeDraftDecorator {
                "_decorators": Array [
                  Object {
                    "component": [Function],
                    "strategy": [Function],
                  },
                ],
              },
              "directionMap": Immutable.OrderedMap {
                "123": "LTR",
              },
              "forceSelection": false,
              "inCompositionMode": false,
              "inlineStyleOverride": null,
              "lastChangeType": null,
              "nativelyRenderedContent": null,
              "redoStack": Immutable.Stack [],
              "selection": Immutable.Record {
                "anchorKey": "123",
                "anchorOffset": 0,
                "focusKey": "123",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
              "treeMap": Immutable.OrderedMap {
                "123": Immutable.List [
                  Immutable.Record {
                    "start": 0,
                    "end": 0,
                    "decoratorKey": null,
                    "leaves": Immutable.List [
                      Immutable.Record {
                        "start": 0,
                        "end": 0,
                      },
                    ],
                  },
                ],
              },
              "undoStack": Immutable.Stack [],
            },
          }
        }
        handlePastedText={[Function]}
        handleReturn={[Function]}
        keyBindingFn={[Function]}
        onChange={[Function]}
        placeholder=""
        readOnly={false}
        spellCheck={true}
        stripPastedStyles={false}
      />
    </RichTextEditor__Input>
  </Field>
</RichTextEditor__Wrapper>
`;

exports[`components/RichTextEditor should render existing content 1`] = `
<RichTextEditor__Wrapper
  size="small"
>
  <Field
    data-test="rte-field"
    last={false}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseDown={[Function]}
  >
    <Label
      bold={true}
      id="label-test"
    >
      I am a label
    </Label>
    <RichTextEditor__Input
      placeholderStyle="unordered-list-item"
    >
      <ToolBar
        autoFocus={false}
        controls={Object {}}
        editorState={
          EditorState {
            "_immutable": Immutable.Record {
              "allowUndo": true,
              "currentContent": Immutable.Record {
                "entityMap": Object {
                  "__add": [Function],
                  "__create": [Function],
                  "__get": [Function],
                  "__getLastCreatedEntityKey": [Function],
                  "__mergeData": [Function],
                  "__replaceData": [Function],
                  "add": [Function],
                  "create": [Function],
                  "get": [Function],
                  "getLastCreatedEntityKey": [Function],
                  "mergeData": [Function],
                  "replaceData": [Function],
                },
                "blockMap": Immutable.OrderedMap {
                  "123": Immutable.Record {
                    "key": "123",
                    "type": "unordered-list-item",
                    "text": "Emphasis",
                    "characterList": Immutable.List [
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                    ],
                    "depth": 0,
                    "data": Immutable.Map {},
                  },
                },
                "selectionBefore": Immutable.Record {
                  "anchorKey": "123",
                  "anchorOffset": 0,
                  "focusKey": "123",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
                "selectionAfter": Immutable.Record {
                  "anchorKey": "123",
                  "anchorOffset": 0,
                  "focusKey": "123",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
              },
              "decorator": CompositeDraftDecorator {
                "_decorators": Array [
                  Object {
                    "component": [Function],
                    "strategy": [Function],
                  },
                ],
              },
              "directionMap": Immutable.OrderedMap {
                "123": "LTR",
              },
              "forceSelection": false,
              "inCompositionMode": false,
              "inlineStyleOverride": null,
              "lastChangeType": null,
              "nativelyRenderedContent": null,
              "redoStack": Immutable.Stack [],
              "selection": Immutable.Record {
                "anchorKey": "123",
                "anchorOffset": 0,
                "focusKey": "123",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
              "treeMap": Immutable.OrderedMap {
                "123": Immutable.List [
                  Immutable.Record {
                    "start": 0,
                    "end": 8,
                    "decoratorKey": null,
                    "leaves": Immutable.List [
                      Immutable.Record {
                        "start": 0,
                        "end": 8,
                      },
                    ],
                  },
                ],
              },
              "undoStack": Immutable.Stack [],
            },
          }
        }
        isActiveControl={[Function]}
        name="test-name"
        onPiping={[Function]}
        onToggle={[Function]}
        onUpdate={[MockFunction]}
        selectionIsCollapsed={true}
        value="
  <h2>List of styles:</h2>
  <ul>
    <li>Regular</li>
    <li><strong>Bold</strong></li>
    <li><em>Emphasis</em></li>
  </ul>
"
        visible={false}
      />
      <DraftEditor
        ariaLabel="I am a label"
        ariaLabelledBy="label-test"
        blockRenderMap={
          Immutable.Map {
            "ordered-list-item": Object {
              "element": "li",
              "wrapper": <ol
                className="public-DraftStyleDefault-ol"
              />,
            },
            "header-six": Object {
              "element": "h6",
            },
            "header-four": Object {
              "element": "h4",
            },
            "header-one": Object {
              "element": "h1",
            },
            "unordered-list-item": Object {
              "element": "li",
              "wrapper": <ul
                className="public-DraftStyleDefault-ul"
              />,
            },
            "atomic": Object {
              "element": "figure",
            },
            "unstyled": Object {
              "aliasedElements": Array [
                "p",
              ],
              "element": "div",
            },
            "header-two": Object {
              "element": "h2",
            },
            "code-block": Object {
              "element": "pre",
              "wrapper": <pre
                className="public-DraftStyleDefault-pre"
              />,
            },
            "blockquote": Object {
              "element": "blockquote",
            },
            "header-five": Object {
              "element": "h5",
            },
            "header-three": Object {
              "element": "h3",
            },
          }
        }
        blockRendererFn={[Function]}
        blockStyleFn={[Function]}
        customStyleMap={
          Object {
            "ITALIC": Object {
              "backgroundColor": "#cbe2c8",
            },
          }
        }
        editorState={
          EditorState {
            "_immutable": Immutable.Record {
              "allowUndo": true,
              "currentContent": Immutable.Record {
                "entityMap": Object {
                  "__add": [Function],
                  "__create": [Function],
                  "__get": [Function],
                  "__getLastCreatedEntityKey": [Function],
                  "__mergeData": [Function],
                  "__replaceData": [Function],
                  "add": [Function],
                  "create": [Function],
                  "get": [Function],
                  "getLastCreatedEntityKey": [Function],
                  "mergeData": [Function],
                  "replaceData": [Function],
                },
                "blockMap": Immutable.OrderedMap {
                  "123": Immutable.Record {
                    "key": "123",
                    "type": "unordered-list-item",
                    "text": "Emphasis",
                    "characterList": Immutable.List [
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                      Immutable.Record {
                        "style": Immutable.OrderedSet [
                          "ITALIC",
                        ],
                        "entity": null,
                      },
                    ],
                    "depth": 0,
                    "data": Immutable.Map {},
                  },
                },
                "selectionBefore": Immutable.Record {
                  "anchorKey": "123",
                  "anchorOffset": 0,
                  "focusKey": "123",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
                "selectionAfter": Immutable.Record {
                  "anchorKey": "123",
                  "anchorOffset": 0,
                  "focusKey": "123",
                  "focusOffset": 0,
                  "isBackward": false,
                  "hasFocus": false,
                },
              },
              "decorator": CompositeDraftDecorator {
                "_decorators": Array [
                  Object {
                    "component": [Function],
                    "strategy": [Function],
                  },
                ],
              },
              "directionMap": Immutable.OrderedMap {
                "123": "LTR",
              },
              "forceSelection": false,
              "inCompositionMode": false,
              "inlineStyleOverride": null,
              "lastChangeType": null,
              "nativelyRenderedContent": null,
              "redoStack": Immutable.Stack [],
              "selection": Immutable.Record {
                "anchorKey": "123",
                "anchorOffset": 0,
                "focusKey": "123",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
              "treeMap": Immutable.OrderedMap {
                "123": Immutable.List [
                  Immutable.Record {
                    "start": 0,
                    "end": 8,
                    "decoratorKey": null,
                    "leaves": Immutable.List [
                      Immutable.Record {
                        "start": 0,
                        "end": 8,
                      },
                    ],
                  },
                ],
              },
              "undoStack": Immutable.Stack [],
            },
          }
        }
        handlePastedText={[Function]}
        handleReturn={[Function]}
        keyBindingFn={[Function]}
        onChange={[Function]}
        placeholder=""
        readOnly={false}
        spellCheck={true}
        stripPastedStyles={false}
      />
    </RichTextEditor__Input>
  </Field>
</RichTextEditor__Wrapper>
`;
