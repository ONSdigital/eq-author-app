// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SectionEditor should render 1`] = `
<SectionEditor__SectionCanvas
  data-test="section-editor"
  id={null}
>
  <DeleteConfirmDialog
    alertText="All questions in this section will also be removed. This may affect piping and routing rules elsewhere."
    data-test="dialog-delete-confirm"
    icon="icon-dialog-section.svg"
    isOpen={false}
    onClose={[MockFunction]}
    onDelete={[MockFunction]}
  />
  <MoveSectionQuery
    questionnaireId="1"
  >
    <Component />
  </MoveSectionQuery>
  <SectionEditor__Padding>
    <RichTextEditor
      autoFocus={false}
      controls={
        Object {
          "emphasis": true,
        }
      }
      id="section-title"
      label="Title"
      multiline={false}
      name="title"
      onUpdate={[Function]}
      placeholder=""
      size="large"
      testSelector="txt-section-title"
      value="Section 1"
    />
  </SectionEditor__Padding>
  <Connect(Apollo(UnwrappedIntroEditor))
    onChange={[MockFunction]}
    onUpdate={[MockFunction]}
    section={
      Object {
        "id": "section-1",
        "title": "Section 1",
      }
    }
  />
</SectionEditor__SectionCanvas>
`;

exports[`SectionEditor should render 2`] = `
<SectionEditor__SectionCanvas
  data-test="section-editor"
  id={null}
>
  <DeleteConfirmDialog
    alertText="All questions in this section will also be removed. This may affect piping and routing rules elsewhere."
    data-test="dialog-delete-confirm"
    icon="icon-dialog-section.svg"
    isOpen={false}
    onClose={[MockFunction]}
    onDelete={[MockFunction]}
  />
  <MoveSectionQuery
    questionnaireId="1"
  >
    <Component />
  </MoveSectionQuery>
  <SectionEditor__Padding>
    <RichTextEditor
      autoFocus={false}
      controls={
        Object {
          "emphasis": true,
        }
      }
      id="section-title"
      label="Title"
      multiline={false}
      name="title"
      onUpdate={[Function]}
      placeholder=""
      size="large"
      testSelector="txt-section-title"
      value="Section 2"
    />
  </SectionEditor__Padding>
  <Connect(Apollo(UnwrappedIntroEditor))
    onChange={[MockFunction]}
    onUpdate={[MockFunction]}
    section={
      Object {
        "id": "section-2",
        "title": "Section 2",
      }
    }
  />
</SectionEditor__SectionCanvas>
`;
