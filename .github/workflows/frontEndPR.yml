name: Front end pull request

on:
  pull_request:
    paths:
      - 'eq-author/**'

jobs:
  run_checks:
    runs-on: ubuntu-latest

    env:
      working-directory: ./eq-author

    strategy:
      matrix:
        node-version: [10.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: dependencies
        run: yarn --frozen-lockfile
        working-directory: ${{env.working-directory}}
      - name: Linter
        run: yarn lint
        working-directory: ${{env.working-directory}}
      - name: Unit tests
        run: yarn test --coverage
        env:
          BABEL_ENV: "test"
          NODE_ENV: "test"
          PUBLIC_URL: "test"
          CI: true
        working-directory: ${{env.working-directory}}
      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./${{env.working-directory}}/coverage/coverage-final.json
          yml: ./codecov.yml
          fail_ci_if_error: true
      - name: Build application for production
        run: yarn build
        env:
          REACT_APP_EQ_AUTHOR_VERSION: $(git rev-parse HEAD)
        working-directory: ${{env.working-directory}}
      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: onsdigital/eq-publisher
          tags: ${{github.HEAD_REF}}
          path: ${{env.working-directory}}
