name: Update DockerHub's latest image

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  Author:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    env:
      TAG: "latest"
      WORKING_DIRECTORY: "eq-author"

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn --frozen-lockfile
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Build Author for deployment
        run: yarn build
        env:
          REACT_APP_EQ_AUTHOR_VERSION: $(git rev-parse HEAD)
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Build Storybook (Design system) for deployment 
        run: yarn build-storybook -o ../docs --docs
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Build new docker image
        run: docker build -t onsdigital/eq-author:$TAG .
        env:
          TAG: ${{ env.TAG }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Push new docker image
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}; docker push onsdigital/eq-author:$TAG
        env:
          TAG: ${{ env.TAG }}
        working-directory: ${{ env.WORKING_DIRECTORY }}

  API:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    env:
      TAG: "latest"
      WORKING_DIRECTORY: "eq-author-api"

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn --frozen-lockfile
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Build new docker image
        run: docker build -t onsdigital/eq-author-api:$TAG --build-arg APPLICATION_VERSION=$(git rev-parse HEAD) -f Dockerfile .
        env:
          TAG: ${{ env.TAG }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Push new docker image
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}; docker push onsdigital/eq-author-api:$TAG
        env:
          TAG: ${{ env.TAG }}
        working-directory: ${{ env.WORKING_DIRECTORY }}

  Publisher:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    env:
      TAG: "latest"
      WORKING_DIRECTORY: "eq-publisher"

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn --frozen-lockfile
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Build new docker image
        run: docker build -t onsdigital/eq-publisher:$TAG --build-arg APPLICATION_VERSION=$(git rev-parse HEAD) -f Dockerfile .
        env:
          TAG: ${{ env.TAG }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Push new docker image
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}; docker push onsdigital/eq-publisher:$TAG
        env:
          TAG: ${{ env.TAG }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
