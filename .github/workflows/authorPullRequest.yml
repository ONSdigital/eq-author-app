name: Author Pull Request

on: [pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Delete this
        run: echo ${{github.event.sender.login}}
      - name: Install dependencies
        run: yarn --frozen-lockfile; pushd eq-author; yarn --frozen-lockfile; popd
      - name: Linter
        run: pushd eq-author; yarn lint; popd
      - name: Unit tests
        run: pushd eq-author; yarn test --coverage; popd
        env:
          BABEL_ENV: "test"
          NODE_ENV: "test"
          PUBLIC_URL: "test"
          CI: true
      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./eq-author/coverage/coverage-final.json
          yml: ./codecov.yml
          fail_ci_if_error: true

  build:
    if: github.event.sender.login != 'dependabot'

    runs-on: ubuntu-latest

    needs: tests

    strategy:
      matrix:
        node-version: [10.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn --frozen-lockfile; pushd eq-author; yarn --frozen-lockfile; popd
      - name: Build Author for deployment
        run: pushd eq-author; yarn build; popd
        env:
          REACT_APP_EQ_AUTHOR_VERSION: $(git rev-parse HEAD)
      - name: Build Storybook (Design system) for deployment 
        run: pushd eq-author; yarn build-storybook -o ../docs; popd
      - name: Build new docker image
        run: pushd eq-author; docker build -t onsdigital/eq-author:$TAG .; popd
        env:
          TAG: ${{github.HEAD_REF}}
      - name: Push new docker image
        run: pushd eq-author; docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}; docker push onsdigital/eq-author:$TAG; popd
        env:
          TAG: ${{github.HEAD_REF}}
