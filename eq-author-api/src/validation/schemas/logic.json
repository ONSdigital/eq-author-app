{
  "$id": "http://example.com/schemas/logic.json",
  "definitions": {
    "routingRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "destination": {
          "$ref": "#/definitions/destination"
        },
        "expressionGroup": {
          "$ref": "#/definitions/expressionGroup"
        }
      }
    },
    "destination": {
      "validateRoutingDestination": true
    },
    "expressionGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "expressions": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/expression"
              },
              {
                "$ref": "#/definitions/expression-unanswered"
              },
              {
                "$ref": "#/definitions/expression-unSelected"
              }
            ]
          }
        }
      },
      "if": {
        "properties": {
          "operator": {
            "const": "And"
          }
        }
      },
      "then": {
        "validateRoutingLogicalAND": true
      },
      "anyOf": [
        {
          "properties": {
            "operator": {
              "enum": ["And", "Or"]
            }
          }
        },
        {
          "properties": {
            "expressions": {
              "type": "array",
              "maxItems": 1
            },
            "operator": {
              "type": "null"
            }
          }
        }
      ],
      "errorMessage": {
        "properties": {
          "operator": "ERR_VALUE_REQUIRED"
        }
      }
    },
    "expression": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "condition": {
          "allOf": [
            {
              "validateMultipleChoiceCondition": true
            },
            {
              "$ref": "definitions.json#/definitions/populatedString"
            }
          ]
        },
        "left": {
          "type": "object",
          "properties": {
            "answerId": {
              "type": "string",
              "pattern": "\\w+"
            }
          },
          "required": ["answerId"],
          "if": {
            "properties": {
              "answerId": {
                "type": "string",
                "pattern": "\\w+"
              }
            },
            "required": ["answerId"]
          },
          "then": {
            "idPreceedsCurrentEntity": {
              "$data": "0/answerId"
            },
            "errorMessage": "ERR_LEFTSIDE_NO_LONGER_AVAILABLE"
          },
          "errorMessage": {
            "properties": {
              "answerId": "ERR_ANSWER_NOT_SELECTED"
            }
          }
        }
      },
      "if": {
        "properties": {
          "condition": {
            "$ref": "definitions.json#/definitions/populatedString"
          }
        }
      },
      "then": {
        "properties": {
          "right": {
            "type": "object",
            "properties": {
              "type": {
                "enum": ["Custom", "SelectedOptions"]
              },
              "optionIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              },
              "customValue": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "number",
                    "nullable": false,
                    "errorMessage": "ERR_RIGHTSIDE_NO_VALUE"
                  }
                }
              }
            },
            "required": ["type"],
            "errorMessage": "ERR_RIGHTSIDE_NO_VALUE"
          }
        }
      },
      "validateExpression": true,
      "required": ["condition"]
    },
    "expression-unanswered": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "condition": {
          "enum": ["Unanswered"]
        },
        "left": {
          "type": "object",
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "answerId": {
                  "type": "string",
                  "pattern": "\\w+"
                }
              },
              "required": ["answerId"]
            }
          ],
          "errorMessage": "ERR_ANSWER_NOT_SELECTED"
        }
      }
    },
    "expression-unSelected": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "condition": {
          "enum": ["OneOf", "NotAnyOf", "AnyOf"]
        },
        "right": {
          "type": "object",
          "properties": {
            "optionIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1,
              "errorMessage": "ERR_RIGHTSIDE_NO_VALUE"
            }
          }
        }
      }
    },
    "skipConditions": {
      "type": "array",
      "items": {
        "properties": {
          "id": {
            "type": "string"
          },
          "expressions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/expression"
                },
                {
                  "$ref": "#/definitions/expression-unanswered"
                },
                {
                  "$ref": "#/definitions/expression-unSelected"
                }
              ]
            }
          }
        }
      }
    },
    "displayConditions": {
      "type": "array",
      "items": {
        "properties": {
          "id": {
            "type": "string"
          },
          "expressions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/expression"
                },
                {
                  "$ref": "#/definitions/expression-unanswered"
                }
              ]
            }
          }
        }
      }
    }
  }
}
